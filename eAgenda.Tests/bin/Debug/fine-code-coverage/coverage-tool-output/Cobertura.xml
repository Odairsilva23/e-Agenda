<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE coverage SYSTEM "http://cobertura.sourceforge.net/xml/coverage-04.dtd">
<coverage line-rate="0.1112924614913802" branch-rate="0.047330960854092524" lines-covered="1091" lines-valid="9803" branches-covered="133" branches-valid="2810" complexity="3423" version="0" timestamp="1625757748">
  <sources />
  <packages>
    <package name="Description" line-rate="0.15789473684210525" branch-rate="0.09615384615384616" complexity="36">
      <classes>
        <class name="DescriptionLibrary.DescriptionGetter" filename="a:\GitHub\net-Description\Library\DescriptionGetter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ConstructorDescription" signature="(System.Type,System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="(System.Enum)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EventDescription" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FieldDescription" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MethodDescription" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterDescription" signature="(System.Type,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PropertyDescription" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnDescription" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDescription" signature="(System.Reflection.ICustomAttributeProvider)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
    <package name="eAgenda.Controladores" line-rate="0.7442396313364056" branch-rate="0.5" complexity="105">
      <classes>
        <class name="eAgenda.Controladores.CompromissoModule.ControladorCompromisso" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Controladores\CompromissoModule\ControladorCompromisso.cs" line-rate="0.9333333333333333" branch-rate="0.8" complexity="1">
          <methods>
            <method name="InserirNovo" signature="(eAgenda.Dominio.CompromissoModule.Compromisso)" line-rate="1" branch-rate="0.75" complexity="NaN">
              <lines>
                <line number="163" hits="19" branch="false" />
                <line number="164" hits="19" branch="false" />
                <line number="166" hits="19" branch="true" condition-coverage="50% (1/2)" />
                <line number="167" hits="19" branch="false" />
                <line number="168" hits="19" branch="false" />
                <line number="169" hits="19" branch="true" condition-coverage="100% (2/2)" />
                <line number="170" hits="2" branch="false" />
                <line number="172" hits="17" branch="false" />
                <line number="173" hits="19" branch="false" />
                <line number="175" hits="19" branch="false" />
                <line number="176" hits="19" branch="false" />
              </lines>
            </method>
            <method name="Editar" signature="(System.Int32,eAgenda.Dominio.CompromissoModule.Compromisso)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="181" hits="3" branch="false" />
                <line number="182" hits="3" branch="false" />
                <line number="184" hits="3" branch="true" condition-coverage="50% (1/2)" />
                <line number="185" hits="3" branch="false" />
                <line number="186" hits="3" branch="false" />
                <line number="187" hits="3" branch="false" />
                <line number="188" hits="3" branch="false" />
                <line number="190" hits="3" branch="false" />
                <line number="191" hits="3" branch="false" />
              </lines>
            </method>
            <method name="Excluir" signature="(System.Int32)" line-rate="0.6666666666666666" branch-rate="1" complexity="NaN">
              <lines>
                <line number="194" hits="1" branch="false" />
                <line number="196" hits="1" branch="false" />
                <line number="197" hits="1" branch="false" />
                <line number="198" hits="1" branch="false" />
                <line number="199" hits="0" branch="false" />
                <line number="200" hits="0" branch="false" />
                <line number="201" hits="0" branch="false" />
                <line number="204" hits="1" branch="false" />
                <line number="205" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Existe" signature="(System.Int32)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="208" hits="0" branch="false" />
                <line number="209" hits="0" branch="false" />
                <line number="210" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SelecionarPorId" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="213" hits="6" branch="false" />
                <line number="214" hits="6" branch="false" />
                <line number="215" hits="6" branch="false" />
              </lines>
            </method>
            <method name="SelecionarTodos" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="218" hits="3" branch="false" />
                <line number="219" hits="3" branch="false" />
                <line number="220" hits="3" branch="false" />
              </lines>
            </method>
            <method name="SelecionarCompromissosFuturos" signature="(System.DateTime,System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="223" hits="1" branch="false" />
                <line number="224" hits="1" branch="false" />
                <line number="226" hits="1" branch="false" />
                <line number="227" hits="1" branch="false" />
                <line number="229" hits="1" branch="false" />
                <line number="230" hits="1" branch="false" />
              </lines>
            </method>
            <method name="SelecionarCompromissosPassados" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="233" hits="1" branch="false" />
                <line number="234" hits="1" branch="false" />
                <line number="235" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ConverterEmCompromisso" signature="(System.Data.IDataReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="238" hits="13" branch="false" />
                <line number="239" hits="13" branch="false" />
                <line number="240" hits="13" branch="false" />
                <line number="241" hits="13" branch="false" />
                <line number="242" hits="13" branch="false" />
                <line number="243" hits="13" branch="false" />
                <line number="244" hits="13" branch="false" />
                <line number="246" hits="13" branch="false" />
                <line number="247" hits="13" branch="false" />
                <line number="248" hits="13" branch="false" />
                <line number="249" hits="13" branch="false" />
                <line number="250" hits="13" branch="false" />
                <line number="252" hits="13" branch="false" />
                <line number="253" hits="13" branch="true" condition-coverage="100% (2/2)" />
                <line number="254" hits="9" branch="false" />
                <line number="255" hits="9" branch="false" />
                <line number="256" hits="9" branch="false" />
                <line number="257" hits="9" branch="false" />
                <line number="259" hits="13" branch="false" />
                <line number="260" hits="13" branch="false" />
                <line number="262" hits="13" branch="false" />
                <line number="263" hits="13" branch="false" />
              </lines>
            </method>
            <method name="ObtemParametrosCompromisso" signature="(eAgenda.Dominio.CompromissoModule.Compromisso)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="266" hits="20" branch="false" />
                <line number="267" hits="20" branch="false" />
                <line number="269" hits="20" branch="false" />
                <line number="270" hits="20" branch="false" />
                <line number="271" hits="20" branch="false" />
                <line number="272" hits="20" branch="false" />
                <line number="273" hits="20" branch="false" />
                <line number="274" hits="20" branch="false" />
                <line number="275" hits="20" branch="false" />
                <line number="276" hits="20" branch="true" condition-coverage="100% (2/2)" />
                <line number="278" hits="20" branch="false" />
                <line number="279" hits="20" branch="false" />
              </lines>
            </method>
            <method name="SelecionarHorarioOcupado" signature="(System.DateTime,System.TimeSpan,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="281" hits="19" branch="false" />
                <line number="283" hits="19" branch="false" />
                <line number="284" hits="19" branch="false" />
                <line number="285" hits="19" branch="false" />
                <line number="286" hits="19" branch="false" />
                <line number="287" hits="19" branch="false" />
                <line number="288" hits="19" branch="false" />
                <line number="290" hits="19" branch="false" />
                <line number="292" hits="19" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="163" hits="19" branch="false" />
            <line number="164" hits="19" branch="false" />
            <line number="166" hits="19" branch="true" condition-coverage="50% (1/2)" />
            <line number="167" hits="19" branch="false" />
            <line number="168" hits="19" branch="false" />
            <line number="169" hits="19" branch="true" condition-coverage="100% (2/2)" />
            <line number="170" hits="2" branch="false" />
            <line number="172" hits="17" branch="false" />
            <line number="173" hits="19" branch="false" />
            <line number="175" hits="19" branch="false" />
            <line number="176" hits="19" branch="false" />
            <line number="181" hits="3" branch="false" />
            <line number="182" hits="3" branch="false" />
            <line number="184" hits="3" branch="true" condition-coverage="50% (1/2)" />
            <line number="185" hits="3" branch="false" />
            <line number="186" hits="3" branch="false" />
            <line number="187" hits="3" branch="false" />
            <line number="188" hits="3" branch="false" />
            <line number="190" hits="3" branch="false" />
            <line number="191" hits="3" branch="false" />
            <line number="194" hits="1" branch="false" />
            <line number="196" hits="1" branch="false" />
            <line number="197" hits="1" branch="false" />
            <line number="198" hits="1" branch="false" />
            <line number="199" hits="0" branch="false" />
            <line number="200" hits="0" branch="false" />
            <line number="201" hits="0" branch="false" />
            <line number="204" hits="1" branch="false" />
            <line number="205" hits="1" branch="false" />
            <line number="208" hits="0" branch="false" />
            <line number="209" hits="0" branch="false" />
            <line number="210" hits="0" branch="false" />
            <line number="213" hits="6" branch="false" />
            <line number="214" hits="6" branch="false" />
            <line number="215" hits="6" branch="false" />
            <line number="218" hits="3" branch="false" />
            <line number="219" hits="3" branch="false" />
            <line number="220" hits="3" branch="false" />
            <line number="223" hits="1" branch="false" />
            <line number="224" hits="1" branch="false" />
            <line number="226" hits="1" branch="false" />
            <line number="227" hits="1" branch="false" />
            <line number="229" hits="1" branch="false" />
            <line number="230" hits="1" branch="false" />
            <line number="233" hits="1" branch="false" />
            <line number="234" hits="1" branch="false" />
            <line number="235" hits="1" branch="false" />
            <line number="238" hits="13" branch="false" />
            <line number="239" hits="13" branch="false" />
            <line number="240" hits="13" branch="false" />
            <line number="241" hits="13" branch="false" />
            <line number="242" hits="13" branch="false" />
            <line number="243" hits="13" branch="false" />
            <line number="244" hits="13" branch="false" />
            <line number="246" hits="13" branch="false" />
            <line number="247" hits="13" branch="false" />
            <line number="248" hits="13" branch="false" />
            <line number="249" hits="13" branch="false" />
            <line number="250" hits="13" branch="false" />
            <line number="252" hits="13" branch="false" />
            <line number="253" hits="13" branch="true" condition-coverage="100% (2/2)" />
            <line number="254" hits="9" branch="false" />
            <line number="255" hits="9" branch="false" />
            <line number="256" hits="9" branch="false" />
            <line number="257" hits="9" branch="false" />
            <line number="259" hits="13" branch="false" />
            <line number="260" hits="13" branch="false" />
            <line number="262" hits="13" branch="false" />
            <line number="263" hits="13" branch="false" />
            <line number="266" hits="20" branch="false" />
            <line number="267" hits="20" branch="false" />
            <line number="269" hits="20" branch="false" />
            <line number="270" hits="20" branch="false" />
            <line number="271" hits="20" branch="false" />
            <line number="272" hits="20" branch="false" />
            <line number="273" hits="20" branch="false" />
            <line number="274" hits="20" branch="false" />
            <line number="275" hits="20" branch="false" />
            <line number="276" hits="20" branch="true" condition-coverage="100% (2/2)" />
            <line number="278" hits="20" branch="false" />
            <line number="279" hits="20" branch="false" />
            <line number="281" hits="19" branch="false" />
            <line number="283" hits="19" branch="false" />
            <line number="284" hits="19" branch="false" />
            <line number="285" hits="19" branch="false" />
            <line number="286" hits="19" branch="false" />
            <line number="287" hits="19" branch="false" />
            <line number="288" hits="19" branch="false" />
            <line number="290" hits="19" branch="false" />
            <line number="292" hits="19" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Controladores.ContatoModule.ControladorContato" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Controladores\ContatoModule\ControladorContato.cs" line-rate="0.9" branch-rate="0.5" complexity="1">
          <methods>
            <method name="InserirNovo" signature="(eAgenda.Dominio.ContatoModule.Contato)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="80" hits="27" branch="false" />
                <line number="81" hits="27" branch="false" />
                <line number="83" hits="27" branch="true" condition-coverage="50% (1/2)" />
                <line number="84" hits="27" branch="false" />
                <line number="85" hits="27" branch="false" />
                <line number="86" hits="27" branch="false" />
                <line number="88" hits="27" branch="false" />
                <line number="89" hits="27" branch="false" />
              </lines>
            </method>
            <method name="Editar" signature="(System.Int32,eAgenda.Dominio.ContatoModule.Contato)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="92" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
                <line number="95" hits="1" branch="true" condition-coverage="50% (1/2)" />
                <line number="96" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="99" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
                <line number="102" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Excluir" signature="(System.Int32)" line-rate="0.6666666666666666" branch-rate="1" complexity="NaN">
              <lines>
                <line number="105" hits="1" branch="false" />
                <line number="107" hits="1" branch="false" />
                <line number="108" hits="1" branch="false" />
                <line number="109" hits="1" branch="false" />
                <line number="110" hits="0" branch="false" />
                <line number="111" hits="0" branch="false" />
                <line number="112" hits="0" branch="false" />
                <line number="115" hits="1" branch="false" />
                <line number="116" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Existe" signature="(System.Int32)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="119" hits="0" branch="false" />
                <line number="120" hits="0" branch="false" />
                <line number="121" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SelecionarPorId" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="124" hits="4" branch="false" />
                <line number="125" hits="4" branch="false" />
                <line number="126" hits="4" branch="false" />
              </lines>
            </method>
            <method name="SelecionarTodos" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="129" hits="1" branch="false" />
                <line number="130" hits="1" branch="false" />
                <line number="131" hits="1" branch="false" />
              </lines>
            </method>
            <method name="SelecionarContatosAgrupados" signature="(System.Func`2&lt;eAgenda.Dominio.ContatoModule.Contato,System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="134" hits="1" branch="false" />
                <line number="135" hits="1" branch="false" />
                <line number="137" hits="1" branch="false" />
                <line number="138" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ObtemParametrosContato" signature="(eAgenda.Dominio.ContatoModule.Contato)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="141" hits="28" branch="false" />
                <line number="142" hits="28" branch="false" />
                <line number="144" hits="28" branch="false" />
                <line number="145" hits="28" branch="false" />
                <line number="146" hits="28" branch="false" />
                <line number="147" hits="28" branch="false" />
                <line number="148" hits="28" branch="false" />
                <line number="149" hits="28" branch="false" />
                <line number="151" hits="28" branch="false" />
                <line number="152" hits="28" branch="false" />
              </lines>
            </method>
            <method name="ConverterEmContato" signature="(System.Data.IDataReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="155" hits="11" branch="false" />
                <line number="156" hits="11" branch="false" />
                <line number="157" hits="11" branch="false" />
                <line number="158" hits="11" branch="false" />
                <line number="159" hits="11" branch="false" />
                <line number="160" hits="11" branch="false" />
                <line number="161" hits="11" branch="false" />
                <line number="163" hits="11" branch="false" />
                <line number="165" hits="11" branch="false" />
                <line number="167" hits="11" branch="false" />
                <line number="168" hits="11" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="80" hits="27" branch="false" />
            <line number="81" hits="27" branch="false" />
            <line number="83" hits="27" branch="true" condition-coverage="50% (1/2)" />
            <line number="84" hits="27" branch="false" />
            <line number="85" hits="27" branch="false" />
            <line number="86" hits="27" branch="false" />
            <line number="88" hits="27" branch="false" />
            <line number="89" hits="27" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="95" hits="1" branch="true" condition-coverage="50% (1/2)" />
            <line number="96" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="99" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="102" hits="1" branch="false" />
            <line number="105" hits="1" branch="false" />
            <line number="107" hits="1" branch="false" />
            <line number="108" hits="1" branch="false" />
            <line number="109" hits="1" branch="false" />
            <line number="110" hits="0" branch="false" />
            <line number="111" hits="0" branch="false" />
            <line number="112" hits="0" branch="false" />
            <line number="115" hits="1" branch="false" />
            <line number="116" hits="1" branch="false" />
            <line number="119" hits="0" branch="false" />
            <line number="120" hits="0" branch="false" />
            <line number="121" hits="0" branch="false" />
            <line number="124" hits="4" branch="false" />
            <line number="125" hits="4" branch="false" />
            <line number="126" hits="4" branch="false" />
            <line number="129" hits="1" branch="false" />
            <line number="130" hits="1" branch="false" />
            <line number="131" hits="1" branch="false" />
            <line number="134" hits="1" branch="false" />
            <line number="135" hits="1" branch="false" />
            <line number="137" hits="1" branch="false" />
            <line number="138" hits="1" branch="false" />
            <line number="141" hits="28" branch="false" />
            <line number="142" hits="28" branch="false" />
            <line number="144" hits="28" branch="false" />
            <line number="145" hits="28" branch="false" />
            <line number="146" hits="28" branch="false" />
            <line number="147" hits="28" branch="false" />
            <line number="148" hits="28" branch="false" />
            <line number="149" hits="28" branch="false" />
            <line number="151" hits="28" branch="false" />
            <line number="152" hits="28" branch="false" />
            <line number="155" hits="11" branch="false" />
            <line number="156" hits="11" branch="false" />
            <line number="157" hits="11" branch="false" />
            <line number="158" hits="11" branch="false" />
            <line number="159" hits="11" branch="false" />
            <line number="160" hits="11" branch="false" />
            <line number="161" hits="11" branch="false" />
            <line number="163" hits="11" branch="false" />
            <line number="165" hits="11" branch="false" />
            <line number="167" hits="11" branch="false" />
            <line number="168" hits="11" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Controladores.Shared.Controlador`1" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Controladores\Shared\Controlador.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AdicionarParametro" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="17" hits="18" branch="false" />
                <line number="18" hits="18" branch="false" />
                <line number="19" hits="18" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="17" hits="18" branch="false" />
            <line number="18" hits="18" branch="false" />
            <line number="19" hits="18" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Controladores.Shared.Db" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Controladores\Shared\Db.cs" line-rate="0.7446808510638298" branch-rate="0.375" complexity="1">
          <methods>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="13" hits="1" branch="false" />
                <line number="14" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Insert" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0.875" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="23" hits="57" branch="false" />
                <line number="24" hits="57" branch="false" />
                <line number="25" hits="57" branch="true" condition-coverage="50% (1/2)" />
                <line number="26" hits="57" branch="false" />
                <line number="27" hits="57" branch="true" condition-coverage="50% (1/2)" />
                <line number="28" hits="0" branch="false" />
                <line number="30" hits="57" branch="false" />
                <line number="31" hits="57" branch="false" />
              </lines>
            </method>
            <method name="Update" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0.8333333333333334" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="34" hits="49" branch="false" />
                <line number="36" hits="49" branch="true" condition-coverage="50% (1/2)" />
                <line number="37" hits="49" branch="false" />
                <line number="38" hits="49" branch="true" condition-coverage="50% (1/2)" />
                <line number="39" hits="0" branch="false" />
                <line number="41" hits="49" branch="false" />
              </lines>
            </method>
            <method name="Delete" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0.8333333333333334" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="44" hits="3" branch="false" />
                <line number="45" hits="3" branch="true" condition-coverage="50% (1/2)" />
                <line number="46" hits="3" branch="false" />
                <line number="47" hits="3" branch="true" condition-coverage="50% (1/2)" />
                <line number="48" hits="0" branch="false" />
                <line number="49" hits="3" branch="false" />
              </lines>
            </method>
            <method name="GetAll" signature="(System.String,eAgenda.Controladores.Shared.Db/ConverterDelegate`1&lt;T&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0.5714285714285714" branch-rate="0.25" complexity="NaN">
              <lines>
                <line number="52" hits="10" branch="false" />
                <line number="53" hits="10" branch="true" condition-coverage="50% (1/2)" />
                <line number="54" hits="10" branch="false" />
                <line number="55" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="56" hits="0" branch="false" />
                <line number="57" hits="0" branch="false" />
                <line number="58" hits="10" branch="false" />
              </lines>
            </method>
            <method name="Get" signature="(System.String,eAgenda.Controladores.Shared.Db/ConverterDelegate`1&lt;T&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0.5714285714285714" branch-rate="0.25" complexity="NaN">
              <lines>
                <line number="61" hits="14" branch="false" />
                <line number="62" hits="14" branch="true" condition-coverage="50% (1/2)" />
                <line number="63" hits="14" branch="false" />
                <line number="64" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="65" hits="0" branch="false" />
                <line number="66" hits="0" branch="false" />
                <line number="68" hits="14" branch="false" />
              </lines>
            </method>
            <method name="Exists" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0.5714285714285714" branch-rate="0.25" complexity="NaN">
              <lines>
                <line number="71" hits="19" branch="false" />
                <line number="72" hits="19" branch="true" condition-coverage="50% (1/2)" />
                <line number="73" hits="19" branch="false" />
                <line number="74" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="75" hits="0" branch="false" />
                <line number="76" hits="0" branch="false" />
                <line number="77" hits="19" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="1" branch="false" />
            <line number="14" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="23" hits="57" branch="false" />
            <line number="24" hits="57" branch="false" />
            <line number="25" hits="57" branch="true" condition-coverage="50% (1/2)" />
            <line number="26" hits="57" branch="false" />
            <line number="27" hits="57" branch="true" condition-coverage="50% (1/2)" />
            <line number="28" hits="0" branch="false" />
            <line number="30" hits="57" branch="false" />
            <line number="31" hits="57" branch="false" />
            <line number="34" hits="49" branch="false" />
            <line number="36" hits="49" branch="true" condition-coverage="50% (1/2)" />
            <line number="37" hits="49" branch="false" />
            <line number="38" hits="49" branch="true" condition-coverage="50% (1/2)" />
            <line number="39" hits="0" branch="false" />
            <line number="41" hits="49" branch="false" />
            <line number="44" hits="3" branch="false" />
            <line number="45" hits="3" branch="true" condition-coverage="50% (1/2)" />
            <line number="46" hits="3" branch="false" />
            <line number="47" hits="3" branch="true" condition-coverage="50% (1/2)" />
            <line number="48" hits="0" branch="false" />
            <line number="49" hits="3" branch="false" />
            <line number="52" hits="10" branch="false" />
            <line number="53" hits="10" branch="true" condition-coverage="50% (1/2)" />
            <line number="54" hits="10" branch="false" />
            <line number="55" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="56" hits="0" branch="false" />
            <line number="57" hits="0" branch="false" />
            <line number="58" hits="10" branch="false" />
            <line number="61" hits="14" branch="false" />
            <line number="62" hits="14" branch="true" condition-coverage="50% (1/2)" />
            <line number="63" hits="14" branch="false" />
            <line number="64" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="65" hits="0" branch="false" />
            <line number="66" hits="0" branch="false" />
            <line number="68" hits="14" branch="false" />
            <line number="71" hits="19" branch="false" />
            <line number="72" hits="19" branch="true" condition-coverage="50% (1/2)" />
            <line number="73" hits="19" branch="false" />
            <line number="74" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="75" hits="0" branch="false" />
            <line number="76" hits="0" branch="false" />
            <line number="77" hits="19" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Controladores.Shared.DbSqlite" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Controladores\Shared\DbSqlite.cs" line-rate="1" branch-rate="0.9285714285714286" complexity="NaN">
          <methods>
            <method name="InsertSQLite" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="13" hits="57" branch="false" />
                <line number="14" hits="57" branch="false" />
                <line number="15" hits="57" branch="false" />
                <line number="17" hits="57" branch="false" />
                <line number="19" hits="57" branch="false" />
                <line number="20" hits="57" branch="false" />
                <line number="22" hits="57" branch="false" />
                <line number="24" hits="57" branch="false" />
                <line number="26" hits="57" branch="false" />
                <line number="29" hits="57" branch="false" />
              </lines>
            </method>
            <method name="UpdateSQLite" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="32" hits="52" branch="false" />
                <line number="33" hits="52" branch="false" />
                <line number="34" hits="52" branch="false" />
                <line number="35" hits="52" branch="false" />
                <line number="36" hits="52" branch="false" />
                <line number="38" hits="52" branch="false" />
                <line number="40" hits="52" branch="false" />
                <line number="42" hits="52" branch="false" />
                <line number="43" hits="52" branch="false" />
                <line number="44" hits="52" branch="false" />
              </lines>
            </method>
            <method name="DeleteSQLite" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="47" hits="3" branch="false" />
                <line number="48" hits="3" branch="false" />
                <line number="49" hits="3" branch="false" />
              </lines>
            </method>
            <method name="GetAllSQLite" signature="(System.String,eAgenda.Controladores.Shared.Db/ConverterDelegate`1&lt;T&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="52" hits="10" branch="false" />
                <line number="53" hits="10" branch="false" />
                <line number="54" hits="10" branch="false" />
                <line number="56" hits="10" branch="false" />
                <line number="57" hits="10" branch="false" />
                <line number="59" hits="10" branch="false" />
                <line number="62" hits="10" branch="false" />
                <line number="64" hits="10" branch="false" />
                <line number="65" hits="10" branch="false" />
                <line number="66" hits="33" branch="true" condition-coverage="100% (2/2)" />
                <line number="67" hits="23" branch="false" />
                <line number="68" hits="23" branch="false" />
                <line number="69" hits="23" branch="false" />
                <line number="70" hits="23" branch="false" />
                <line number="71" hits="10" branch="false" />
                <line number="72" hits="10" branch="false" />
                <line number="73" hits="10" branch="false" />
                <line number="75" hits="10" branch="false" />
              </lines>
            </method>
            <method name="GetSQLite" signature="(System.String,eAgenda.Controladores.Shared.Db/ConverterDelegate`1&lt;T&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="77" hits="14" branch="false" />
                <line number="78" hits="14" branch="false" />
                <line number="79" hits="14" branch="false" />
                <line number="80" hits="14" branch="false" />
                <line number="81" hits="14" branch="false" />
                <line number="83" hits="14" branch="false" />
                <line number="84" hits="14" branch="false" />
                <line number="86" hits="14" branch="false" />
                <line number="88" hits="14" branch="false" />
                <line number="89" hits="14" branch="false" />
                <line number="90" hits="14" branch="true" condition-coverage="100% (2/2)" />
                <line number="91" hits="11" branch="false" />
                <line number="92" hits="14" branch="false" />
                <line number="93" hits="14" branch="false" />
                <line number="94" hits="14" branch="false" />
                <line number="96" hits="14" branch="false" />
              </lines>
            </method>
            <method name="ExistsSQLite" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="99" hits="19" branch="false" />
                <line number="100" hits="19" branch="false" />
                <line number="101" hits="19" branch="false" />
                <line number="102" hits="19" branch="false" />
                <line number="104" hits="19" branch="false" />
                <line number="106" hits="19" branch="false" />
                <line number="108" hits="19" branch="false" />
                <line number="110" hits="19" branch="false" />
                <line number="112" hits="19" branch="false" />
                <line number="114" hits="19" branch="false" />
              </lines>
            </method>
            <method name="IsNullOrEmptylite" signature="(System.Object)" line-rate="1" branch-rate="0.75" complexity="NaN">
              <lines>
                <line number="118" hits="507" branch="false" />
                <line number="119" hits="507" branch="true" condition-coverage="75% (3/4)" />
                <line number="120" hits="507" branch="false" />
                <line number="121" hits="507" branch="false" />
              </lines>
            </method>
            <method name="SetParameterSQLite" signature="(System.Data.SQLite.SQLiteCommand,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="123" hits="152" branch="false" />
                <line number="124" hits="152" branch="true" condition-coverage="100% (4/4)" />
                <line number="125" hits="49" branch="false" />
                <line number="127" hits="1323" branch="false" />
                <line number="128" hits="507" branch="false" />
                <line number="129" hits="507" branch="false" />
                <line number="131" hits="507" branch="true" condition-coverage="100% (2/2)" />
                <line number="133" hits="507" branch="false" />
                <line number="135" hits="507" branch="false" />
                <line number="136" hits="507" branch="false" />
                <line number="137" hits="152" branch="false" />
              </lines>
            </method>
            <method name="AppendSelectIdentityLite" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="139" hits="57" branch="false" />
                <line number="140" hits="57" branch="false" />
                <line number="141" hits="57" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="57" branch="false" />
            <line number="14" hits="57" branch="false" />
            <line number="15" hits="57" branch="false" />
            <line number="17" hits="57" branch="false" />
            <line number="19" hits="57" branch="false" />
            <line number="20" hits="57" branch="false" />
            <line number="22" hits="57" branch="false" />
            <line number="24" hits="57" branch="false" />
            <line number="26" hits="57" branch="false" />
            <line number="29" hits="57" branch="false" />
            <line number="32" hits="52" branch="false" />
            <line number="33" hits="52" branch="false" />
            <line number="34" hits="52" branch="false" />
            <line number="35" hits="52" branch="false" />
            <line number="36" hits="52" branch="false" />
            <line number="38" hits="52" branch="false" />
            <line number="40" hits="52" branch="false" />
            <line number="42" hits="52" branch="false" />
            <line number="43" hits="52" branch="false" />
            <line number="44" hits="52" branch="false" />
            <line number="47" hits="3" branch="false" />
            <line number="48" hits="3" branch="false" />
            <line number="49" hits="3" branch="false" />
            <line number="52" hits="10" branch="false" />
            <line number="53" hits="10" branch="false" />
            <line number="54" hits="10" branch="false" />
            <line number="56" hits="10" branch="false" />
            <line number="57" hits="10" branch="false" />
            <line number="59" hits="10" branch="false" />
            <line number="62" hits="10" branch="false" />
            <line number="64" hits="10" branch="false" />
            <line number="65" hits="10" branch="false" />
            <line number="66" hits="33" branch="true" condition-coverage="100% (2/2)" />
            <line number="67" hits="23" branch="false" />
            <line number="68" hits="23" branch="false" />
            <line number="69" hits="23" branch="false" />
            <line number="70" hits="23" branch="false" />
            <line number="71" hits="10" branch="false" />
            <line number="72" hits="10" branch="false" />
            <line number="73" hits="10" branch="false" />
            <line number="75" hits="10" branch="false" />
            <line number="77" hits="14" branch="false" />
            <line number="78" hits="14" branch="false" />
            <line number="79" hits="14" branch="false" />
            <line number="80" hits="14" branch="false" />
            <line number="81" hits="14" branch="false" />
            <line number="83" hits="14" branch="false" />
            <line number="84" hits="14" branch="false" />
            <line number="86" hits="14" branch="false" />
            <line number="88" hits="14" branch="false" />
            <line number="89" hits="14" branch="false" />
            <line number="90" hits="14" branch="true" condition-coverage="100% (2/2)" />
            <line number="91" hits="11" branch="false" />
            <line number="92" hits="14" branch="false" />
            <line number="93" hits="14" branch="false" />
            <line number="94" hits="14" branch="false" />
            <line number="96" hits="14" branch="false" />
            <line number="99" hits="19" branch="false" />
            <line number="100" hits="19" branch="false" />
            <line number="101" hits="19" branch="false" />
            <line number="102" hits="19" branch="false" />
            <line number="104" hits="19" branch="false" />
            <line number="106" hits="19" branch="false" />
            <line number="108" hits="19" branch="false" />
            <line number="110" hits="19" branch="false" />
            <line number="112" hits="19" branch="false" />
            <line number="114" hits="19" branch="false" />
            <line number="118" hits="507" branch="false" />
            <line number="119" hits="507" branch="true" condition-coverage="75% (3/4)" />
            <line number="120" hits="507" branch="false" />
            <line number="121" hits="507" branch="false" />
            <line number="123" hits="152" branch="false" />
            <line number="124" hits="152" branch="true" condition-coverage="100% (4/4)" />
            <line number="125" hits="49" branch="false" />
            <line number="127" hits="1323" branch="false" />
            <line number="128" hits="507" branch="false" />
            <line number="129" hits="507" branch="false" />
            <line number="131" hits="507" branch="true" condition-coverage="100% (2/2)" />
            <line number="133" hits="507" branch="false" />
            <line number="135" hits="507" branch="false" />
            <line number="136" hits="507" branch="false" />
            <line number="137" hits="152" branch="false" />
            <line number="139" hits="57" branch="false" />
            <line number="140" hits="57" branch="false" />
            <line number="141" hits="57" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Controladores.Shared.SqlServer" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Controladores\Shared\SqlServer.cs" line-rate="0" branch-rate="0" complexity="NaN">
          <methods>
            <method name="InsertServer" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="14" hits="0" branch="false" />
                <line number="15" hits="0" branch="false" />
                <line number="17" hits="0" branch="false" />
                <line number="19" hits="0" branch="false" />
                <line number="21" hits="0" branch="false" />
                <line number="23" hits="0" branch="false" />
                <line number="25" hits="0" branch="false" />
                <line number="27" hits="0" branch="false" />
                <line number="28" hits="0" branch="false" />
              </lines>
            </method>
            <method name="UpdateServer" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="31" hits="0" branch="false" />
                <line number="32" hits="0" branch="false" />
                <line number="34" hits="0" branch="false" />
                <line number="36" hits="0" branch="false" />
                <line number="38" hits="0" branch="false" />
                <line number="40" hits="0" branch="false" />
                <line number="42" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
              </lines>
            </method>
            <method name="DeleteServer" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="46" hits="0" branch="false" />
                <line number="47" hits="0" branch="false" />
                <line number="48" hits="0" branch="false" />
              </lines>
            </method>
            <method name="GetAllServer" signature="(System.String,eAgenda.Controladores.Shared.Db/ConverterDelegate`1&lt;T&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="51" hits="0" branch="false" />
                <line number="52" hits="0" branch="false" />
                <line number="54" hits="0" branch="false" />
                <line number="56" hits="0" branch="false" />
                <line number="58" hits="0" branch="false" />
                <line number="60" hits="0" branch="false" />
                <line number="62" hits="0" branch="false" />
                <line number="64" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="65" hits="0" branch="false" />
                <line number="66" hits="0" branch="false" />
                <line number="67" hits="0" branch="false" />
                <line number="68" hits="0" branch="false" />
                <line number="70" hits="0" branch="false" />
                <line number="71" hits="0" branch="false" />
                <line number="72" hits="0" branch="false" />
              </lines>
            </method>
            <method name="GetServer" signature="(System.String,eAgenda.Controladores.Shared.Db/ConverterDelegate`1&lt;T&gt;,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="75" hits="0" branch="false" />
                <line number="76" hits="0" branch="false" />
                <line number="78" hits="0" branch="false" />
                <line number="80" hits="0" branch="false" />
                <line number="82" hits="0" branch="false" />
                <line number="84" hits="0" branch="false" />
                <line number="86" hits="0" branch="false" />
                <line number="88" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="89" hits="0" branch="false" />
                <line number="91" hits="0" branch="false" />
                <line number="92" hits="0" branch="false" />
                <line number="93" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ExistsServer" signature="(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="96" hits="0" branch="false" />
                <line number="97" hits="0" branch="false" />
                <line number="99" hits="0" branch="false" />
                <line number="101" hits="0" branch="false" />
                <line number="103" hits="0" branch="false" />
                <line number="105" hits="0" branch="false" />
                <line number="107" hits="0" branch="false" />
                <line number="109" hits="0" branch="false" />
                <line number="110" hits="0" branch="false" />
              </lines>
            </method>
            <method name="IsNullOrEmpty" signature="(System.Object)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="112" hits="0" branch="false" />
                <line number="113" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="114" hits="0" branch="false" />
                <line number="115" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SetParameters" signature="(System.Data.SqlClient.SqlCommand,System.Collections.Generic.Dictionary`2&lt;System.String,System.Object&gt;)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="119" hits="0" branch="false" />
                <line number="120" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="121" hits="0" branch="false" />
                <line number="123" hits="0" branch="false" />
                <line number="124" hits="0" branch="false" />
                <line number="125" hits="0" branch="false" />
                <line number="127" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="129" hits="0" branch="false" />
                <line number="131" hits="0" branch="false" />
                <line number="132" hits="0" branch="false" />
                <line number="133" hits="0" branch="false" />
              </lines>
            </method>
            <method name="AppendSelectIdentity" signature="(System.String)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="136" hits="0" branch="false" />
                <line number="137" hits="0" branch="false" />
                <line number="138" hits="0" branch="false" />
              </lines>
            </method>
            <method name="AppendSelectIdentityLite" signature="(System.String)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="140" hits="0" branch="false" />
                <line number="141" hits="0" branch="false" />
                <line number="142" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="0" branch="false" />
            <line number="15" hits="0" branch="false" />
            <line number="17" hits="0" branch="false" />
            <line number="19" hits="0" branch="false" />
            <line number="21" hits="0" branch="false" />
            <line number="23" hits="0" branch="false" />
            <line number="25" hits="0" branch="false" />
            <line number="27" hits="0" branch="false" />
            <line number="28" hits="0" branch="false" />
            <line number="31" hits="0" branch="false" />
            <line number="32" hits="0" branch="false" />
            <line number="34" hits="0" branch="false" />
            <line number="36" hits="0" branch="false" />
            <line number="38" hits="0" branch="false" />
            <line number="40" hits="0" branch="false" />
            <line number="42" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="46" hits="0" branch="false" />
            <line number="47" hits="0" branch="false" />
            <line number="48" hits="0" branch="false" />
            <line number="51" hits="0" branch="false" />
            <line number="52" hits="0" branch="false" />
            <line number="54" hits="0" branch="false" />
            <line number="56" hits="0" branch="false" />
            <line number="58" hits="0" branch="false" />
            <line number="60" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
            <line number="64" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="65" hits="0" branch="false" />
            <line number="66" hits="0" branch="false" />
            <line number="67" hits="0" branch="false" />
            <line number="68" hits="0" branch="false" />
            <line number="70" hits="0" branch="false" />
            <line number="71" hits="0" branch="false" />
            <line number="72" hits="0" branch="false" />
            <line number="75" hits="0" branch="false" />
            <line number="76" hits="0" branch="false" />
            <line number="78" hits="0" branch="false" />
            <line number="80" hits="0" branch="false" />
            <line number="82" hits="0" branch="false" />
            <line number="84" hits="0" branch="false" />
            <line number="86" hits="0" branch="false" />
            <line number="88" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="89" hits="0" branch="false" />
            <line number="91" hits="0" branch="false" />
            <line number="92" hits="0" branch="false" />
            <line number="93" hits="0" branch="false" />
            <line number="96" hits="0" branch="false" />
            <line number="97" hits="0" branch="false" />
            <line number="99" hits="0" branch="false" />
            <line number="101" hits="0" branch="false" />
            <line number="103" hits="0" branch="false" />
            <line number="105" hits="0" branch="false" />
            <line number="107" hits="0" branch="false" />
            <line number="109" hits="0" branch="false" />
            <line number="110" hits="0" branch="false" />
            <line number="112" hits="0" branch="false" />
            <line number="113" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="114" hits="0" branch="false" />
            <line number="115" hits="0" branch="false" />
            <line number="119" hits="0" branch="false" />
            <line number="120" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="121" hits="0" branch="false" />
            <line number="123" hits="0" branch="false" />
            <line number="124" hits="0" branch="false" />
            <line number="125" hits="0" branch="false" />
            <line number="127" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="129" hits="0" branch="false" />
            <line number="131" hits="0" branch="false" />
            <line number="132" hits="0" branch="false" />
            <line number="133" hits="0" branch="false" />
            <line number="136" hits="0" branch="false" />
            <line number="137" hits="0" branch="false" />
            <line number="138" hits="0" branch="false" />
            <line number="140" hits="0" branch="false" />
            <line number="141" hits="0" branch="false" />
            <line number="142" hits="0" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Controladores.TarefaModule.ControladorTarefa" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Controladores\TarefaModule\ControladorTarefa.cs" line-rate="0.8611111111111112" branch-rate="0.6666666666666666" complexity="3">
          <methods>
            <method name="InserirNovo" signature="(eAgenda.Dominio.TarefaModule.Tarefa)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="113" hits="13" branch="false" />
                <line number="114" hits="13" branch="false" />
                <line number="116" hits="13" branch="true" condition-coverage="50% (1/2)" />
                <line number="117" hits="13" branch="false" />
                <line number="118" hits="13" branch="false" />
                <line number="119" hits="13" branch="false" />
                <line number="121" hits="13" branch="false" />
                <line number="122" hits="13" branch="false" />
              </lines>
            </method>
            <method name="Editar" signature="(System.Int32,eAgenda.Dominio.TarefaModule.Tarefa)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="125" hits="4" branch="false" />
                <line number="126" hits="4" branch="false" />
                <line number="128" hits="4" branch="true" condition-coverage="50% (1/2)" />
                <line number="129" hits="4" branch="false" />
                <line number="130" hits="4" branch="false" />
                <line number="131" hits="4" branch="false" />
                <line number="132" hits="4" branch="false" />
                <line number="134" hits="4" branch="false" />
                <line number="135" hits="4" branch="false" />
              </lines>
            </method>
            <method name="Excluir" signature="(System.Int32)" line-rate="0.6666666666666666" branch-rate="1" complexity="NaN">
              <lines>
                <line number="138" hits="1" branch="false" />
                <line number="140" hits="1" branch="false" />
                <line number="141" hits="1" branch="false" />
                <line number="142" hits="1" branch="false" />
                <line number="143" hits="0" branch="false" />
                <line number="144" hits="0" branch="false" />
                <line number="145" hits="0" branch="false" />
                <line number="148" hits="1" branch="false" />
                <line number="149" hits="1" branch="false" />
              </lines>
            </method>
            <method name="Existe" signature="(System.Int32)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="152" hits="0" branch="false" />
                <line number="153" hits="0" branch="false" />
                <line number="154" hits="0" branch="false" />
              </lines>
            </method>
            <method name="SelecionarTodos" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="157" hits="1" branch="false" />
                <line number="158" hits="1" branch="false" />
                <line number="159" hits="1" branch="false" />
              </lines>
            </method>
            <method name="SelecionarPorId" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="162" hits="4" branch="false" />
                <line number="163" hits="4" branch="false" />
                <line number="164" hits="4" branch="false" />
              </lines>
            </method>
            <method name="AtualizarPercentual" signature="(System.Int32,System.Int32)" line-rate="0" branch-rate="1" complexity="NaN">
              <lines>
                <line number="168" hits="0" branch="false" />
                <line number="169" hits="0" branch="false" />
                <line number="171" hits="0" branch="false" />
                <line number="172" hits="0" branch="false" />
              </lines>
            </method>
            <method name="AtualizarPercentual" signature="(eAgenda.Dominio.TarefaModule.Tarefa,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="175" hits="3" branch="false" />
                <line number="176" hits="3" branch="false" />
                <line number="178" hits="3" branch="false" />
                <line number="179" hits="3" branch="false" />
              </lines>
            </method>
            <method name="SelecionarTodasTarefasConcluidas" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="182" hits="1" branch="false" />
                <line number="183" hits="1" branch="false" />
                <line number="184" hits="1" branch="false" />
              </lines>
            </method>
            <method name="SelecionarTodasTarefasPendentes" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="187" hits="1" branch="false" />
                <line number="188" hits="1" branch="false" />
                <line number="189" hits="1" branch="false" />
              </lines>
            </method>
            <method name="ConverterEmTarefa" signature="(System.Data.IDataReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="192" hits="10" branch="false" />
                <line number="193" hits="10" branch="false" />
                <line number="194" hits="10" branch="false" />
                <line number="195" hits="10" branch="false" />
                <line number="196" hits="10" branch="false" />
                <line number="198" hits="10" branch="false" />
                <line number="200" hits="10" branch="false" />
                <line number="202" hits="10" branch="true" condition-coverage="100% (2/2)" />
                <line number="203" hits="3" branch="false" />
                <line number="205" hits="10" branch="false" />
                <line number="206" hits="10" branch="false" />
                <line number="208" hits="10" branch="false" />
                <line number="209" hits="10" branch="false" />
              </lines>
            </method>
            <method name="ObtemParametrosTarefa" signature="(eAgenda.Dominio.TarefaModule.Tarefa)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="212" hits="17" branch="false" />
                <line number="213" hits="17" branch="false" />
                <line number="215" hits="17" branch="false" />
                <line number="216" hits="17" branch="false" />
                <line number="217" hits="17" branch="false" />
                <line number="218" hits="17" branch="false" />
                <line number="219" hits="17" branch="false" />
                <line number="220" hits="17" branch="false" />
                <line number="222" hits="17" branch="false" />
                <line number="223" hits="17" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="113" hits="13" branch="false" />
            <line number="114" hits="13" branch="false" />
            <line number="116" hits="13" branch="true" condition-coverage="50% (1/2)" />
            <line number="117" hits="13" branch="false" />
            <line number="118" hits="13" branch="false" />
            <line number="119" hits="13" branch="false" />
            <line number="121" hits="13" branch="false" />
            <line number="122" hits="13" branch="false" />
            <line number="125" hits="4" branch="false" />
            <line number="126" hits="4" branch="false" />
            <line number="128" hits="4" branch="true" condition-coverage="50% (1/2)" />
            <line number="129" hits="4" branch="false" />
            <line number="130" hits="4" branch="false" />
            <line number="131" hits="4" branch="false" />
            <line number="132" hits="4" branch="false" />
            <line number="134" hits="4" branch="false" />
            <line number="135" hits="4" branch="false" />
            <line number="138" hits="1" branch="false" />
            <line number="140" hits="1" branch="false" />
            <line number="141" hits="1" branch="false" />
            <line number="142" hits="1" branch="false" />
            <line number="143" hits="0" branch="false" />
            <line number="144" hits="0" branch="false" />
            <line number="145" hits="0" branch="false" />
            <line number="148" hits="1" branch="false" />
            <line number="149" hits="1" branch="false" />
            <line number="152" hits="0" branch="false" />
            <line number="153" hits="0" branch="false" />
            <line number="154" hits="0" branch="false" />
            <line number="157" hits="1" branch="false" />
            <line number="158" hits="1" branch="false" />
            <line number="159" hits="1" branch="false" />
            <line number="162" hits="4" branch="false" />
            <line number="163" hits="4" branch="false" />
            <line number="164" hits="4" branch="false" />
            <line number="168" hits="0" branch="false" />
            <line number="169" hits="0" branch="false" />
            <line number="171" hits="0" branch="false" />
            <line number="172" hits="0" branch="false" />
            <line number="175" hits="3" branch="false" />
            <line number="176" hits="3" branch="false" />
            <line number="178" hits="3" branch="false" />
            <line number="179" hits="3" branch="false" />
            <line number="182" hits="1" branch="false" />
            <line number="183" hits="1" branch="false" />
            <line number="184" hits="1" branch="false" />
            <line number="187" hits="1" branch="false" />
            <line number="188" hits="1" branch="false" />
            <line number="189" hits="1" branch="false" />
            <line number="192" hits="10" branch="false" />
            <line number="193" hits="10" branch="false" />
            <line number="194" hits="10" branch="false" />
            <line number="195" hits="10" branch="false" />
            <line number="196" hits="10" branch="false" />
            <line number="198" hits="10" branch="false" />
            <line number="200" hits="10" branch="false" />
            <line number="202" hits="10" branch="true" condition-coverage="100% (2/2)" />
            <line number="203" hits="3" branch="false" />
            <line number="205" hits="10" branch="false" />
            <line number="206" hits="10" branch="false" />
            <line number="208" hits="10" branch="false" />
            <line number="209" hits="10" branch="false" />
            <line number="212" hits="17" branch="false" />
            <line number="213" hits="17" branch="false" />
            <line number="215" hits="17" branch="false" />
            <line number="216" hits="17" branch="false" />
            <line number="217" hits="17" branch="false" />
            <line number="218" hits="17" branch="false" />
            <line number="219" hits="17" branch="false" />
            <line number="220" hits="17" branch="false" />
            <line number="222" hits="17" branch="false" />
            <line number="223" hits="17" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="eAgenda.Dominio" line-rate="0.7614678899082569" branch-rate="0.6341463414634146" complexity="76">
      <classes>
        <class name="eAgenda.Dominio.CompromissoModule.Compromisso" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\e-Agenda.Dominio\CompromissoModule\Compromisso.cs" line-rate="0.7931034482758621" branch-rate="0.6923076923076923" complexity="7">
          <methods>
            <method name="Assunto" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="22" hits="65" branch="false" />
              </lines>
            </method>
            <method name="Local" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="23" hits="30" branch="false" />
              </lines>
            </method>
            <method name="Link" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="24" hits="30" branch="false" />
              </lines>
            </method>
            <method name="Data" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="78" branch="false" />
              </lines>
            </method>
            <method name="HoraInicio" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="26" hits="78" branch="false" />
              </lines>
            </method>
            <method name="HoraTermino" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="27" hits="78" branch="false" />
              </lines>
            </method>
            <method name="Contato" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="28" hits="30" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.DateTime,System.TimeSpan,System.TimeSpan,eAgenda.Dominio.ContatoModule.Contato)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="10" hits="42" branch="false" />
                <line number="11" hits="42" branch="false" />
                <line number="12" hits="42" branch="false" />
                <line number="13" hits="42" branch="false" />
                <line number="14" hits="42" branch="false" />
                <line number="15" hits="42" branch="false" />
                <line number="16" hits="42" branch="false" />
                <line number="17" hits="42" branch="false" />
                <line number="18" hits="42" branch="false" />
                <line number="19" hits="42" branch="false" />
                <line number="20" hits="42" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="31" hits="5" branch="false" />
                <line number="32" hits="5" branch="false" />
                <line number="33" hits="5" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(eAgenda.Dominio.CompromissoModule.Compromisso)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="36" hits="5" branch="false" />
                <line number="37" hits="5" branch="true" condition-coverage="50% (8/16)" />
                <line number="38" hits="5" branch="false" />
                <line number="39" hits="5" branch="false" />
                <line number="40" hits="5" branch="false" />
                <line number="41" hits="5" branch="false" />
                <line number="42" hits="5" branch="false" />
                <line number="43" hits="5" branch="false" />
                <line number="44" hits="5" branch="false" />
                <line number="45" hits="5" branch="false" />
                <line number="46" hits="5" branch="false" />
              </lines>
            </method>
            <method name="GetHashCode" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="49" hits="0" branch="false" />
                <line number="50" hits="0" branch="false" />
                <line number="51" hits="0" branch="false" />
                <line number="52" hits="0" branch="false" />
                <line number="53" hits="0" branch="false" />
                <line number="54" hits="0" branch="false" />
                <line number="55" hits="0" branch="false" />
                <line number="56" hits="0" branch="false" />
                <line number="57" hits="0" branch="false" />
                <line number="58" hits="0" branch="false" />
                <line number="59" hits="0" branch="false" />
                <line number="60" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Validar" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines>
                <line number="63" hits="29" branch="false" />
                <line number="64" hits="29" branch="false" />
                <line number="66" hits="29" branch="true" condition-coverage="100% (2/2)" />
                <line number="67" hits="4" branch="false" />
                <line number="69" hits="29" branch="true" condition-coverage="100% (2/2)" />
                <line number="70" hits="4" branch="false" />
                <line number="72" hits="29" branch="true" condition-coverage="100% (2/2)" />
                <line number="73" hits="3" branch="false" />
                <line number="75" hits="29" branch="true" condition-coverage="100% (2/2)" />
                <line number="76" hits="2" branch="false" />
                <line number="78" hits="29" branch="true" condition-coverage="100% (2/2)" />
                <line number="79" hits="22" branch="false" />
                <line number="81" hits="29" branch="false" />
                <line number="82" hits="29" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="10" hits="42" branch="false" />
            <line number="11" hits="42" branch="false" />
            <line number="12" hits="42" branch="false" />
            <line number="13" hits="42" branch="false" />
            <line number="14" hits="42" branch="false" />
            <line number="15" hits="42" branch="false" />
            <line number="16" hits="42" branch="false" />
            <line number="17" hits="42" branch="false" />
            <line number="18" hits="42" branch="false" />
            <line number="19" hits="42" branch="false" />
            <line number="20" hits="42" branch="false" />
            <line number="22" hits="65" branch="false" />
            <line number="23" hits="30" branch="false" />
            <line number="24" hits="30" branch="false" />
            <line number="25" hits="78" branch="false" />
            <line number="26" hits="78" branch="false" />
            <line number="27" hits="78" branch="false" />
            <line number="28" hits="30" branch="false" />
            <line number="31" hits="5" branch="false" />
            <line number="32" hits="5" branch="false" />
            <line number="33" hits="5" branch="false" />
            <line number="36" hits="5" branch="false" />
            <line number="37" hits="5" branch="true" condition-coverage="50% (8/16)" />
            <line number="38" hits="5" branch="false" />
            <line number="39" hits="5" branch="false" />
            <line number="40" hits="5" branch="false" />
            <line number="41" hits="5" branch="false" />
            <line number="42" hits="5" branch="false" />
            <line number="43" hits="5" branch="false" />
            <line number="44" hits="5" branch="false" />
            <line number="45" hits="5" branch="false" />
            <line number="46" hits="5" branch="false" />
            <line number="49" hits="0" branch="false" />
            <line number="50" hits="0" branch="false" />
            <line number="51" hits="0" branch="false" />
            <line number="52" hits="0" branch="false" />
            <line number="53" hits="0" branch="false" />
            <line number="54" hits="0" branch="false" />
            <line number="55" hits="0" branch="false" />
            <line number="56" hits="0" branch="false" />
            <line number="57" hits="0" branch="false" />
            <line number="58" hits="0" branch="false" />
            <line number="59" hits="0" branch="false" />
            <line number="60" hits="0" branch="false" />
            <line number="63" hits="29" branch="false" />
            <line number="64" hits="29" branch="false" />
            <line number="66" hits="29" branch="true" condition-coverage="100% (2/2)" />
            <line number="67" hits="4" branch="false" />
            <line number="69" hits="29" branch="true" condition-coverage="100% (2/2)" />
            <line number="70" hits="4" branch="false" />
            <line number="72" hits="29" branch="true" condition-coverage="100% (2/2)" />
            <line number="73" hits="3" branch="false" />
            <line number="75" hits="29" branch="true" condition-coverage="100% (2/2)" />
            <line number="76" hits="2" branch="false" />
            <line number="78" hits="29" branch="true" condition-coverage="100% (2/2)" />
            <line number="79" hits="22" branch="false" />
            <line number="81" hits="29" branch="false" />
            <line number="82" hits="29" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Dominio.ContatoModule.AgrupadorContato" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\e-Agenda.Dominio\ContatoModule\AgrupadorContato.cs" line-rate="0.46875" branch-rate="0.2" complexity="NaN">
          <methods>
            <method name="Agrupar" signature="(System.Collections.Generic.List`1&lt;eAgenda.Dominio.ContatoModule.Contato&gt;,System.Func`2&lt;eAgenda.Dominio.ContatoModule.Contato,System.String&gt;)" line-rate="0.9375" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="10" hits="1" branch="false" />
                <line number="11" hits="1" branch="true" condition-coverage="50% (2/4)" />
                <line number="12" hits="0" branch="false" />
                <line number="14" hits="1" branch="false" />
                <line number="16" hits="1" branch="false" />
                <line number="18" hits="7" branch="false" />
                <line number="19" hits="2" branch="false" />
                <line number="20" hits="2" branch="false" />
                <line number="22" hits="16" branch="false" />
                <line number="23" hits="5" branch="false" />
                <line number="24" hits="5" branch="false" />
                <line number="25" hits="5" branch="false" />
                <line number="27" hits="2" branch="false" />
                <line number="28" hits="2" branch="false" />
                <line number="30" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
              </lines>
            </method>
            <method name="AgruparPorCargo" signature="(System.Collections.Generic.List`1&lt;eAgenda.Dominio.ContatoModule.Contato&gt;)" line-rate="0" branch-rate="0" complexity="NaN">
              <lines>
                <line number="39" hits="0" branch="false" />
                <line number="40" hits="0" branch="true" condition-coverage="0% (0/4)" />
                <line number="41" hits="0" branch="false" />
                <line number="43" hits="0" branch="false" />
                <line number="45" hits="0" branch="true" condition-coverage="0% (0/2)" />
                <line number="47" hits="0" branch="false" />
                <line number="48" hits="0" branch="false" />
                <line number="49" hits="0" branch="false" />
                <line number="51" hits="0" branch="false" />
                <line number="52" hits="0" branch="false" />
                <line number="53" hits="0" branch="false" />
                <line number="54" hits="0" branch="false" />
                <line number="56" hits="0" branch="false" />
                <line number="57" hits="0" branch="false" />
                <line number="59" hits="0" branch="false" />
                <line number="60" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="10" hits="1" branch="false" />
            <line number="11" hits="1" branch="true" condition-coverage="50% (2/4)" />
            <line number="12" hits="0" branch="false" />
            <line number="14" hits="1" branch="false" />
            <line number="16" hits="1" branch="false" />
            <line number="18" hits="7" branch="false" />
            <line number="19" hits="2" branch="false" />
            <line number="20" hits="2" branch="false" />
            <line number="22" hits="16" branch="false" />
            <line number="23" hits="5" branch="false" />
            <line number="24" hits="5" branch="false" />
            <line number="25" hits="5" branch="false" />
            <line number="27" hits="2" branch="false" />
            <line number="28" hits="2" branch="false" />
            <line number="30" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="39" hits="0" branch="false" />
            <line number="40" hits="0" branch="true" condition-coverage="0% (0/4)" />
            <line number="41" hits="0" branch="false" />
            <line number="43" hits="0" branch="false" />
            <line number="45" hits="0" branch="true" condition-coverage="0% (0/2)" />
            <line number="47" hits="0" branch="false" />
            <line number="48" hits="0" branch="false" />
            <line number="49" hits="0" branch="false" />
            <line number="51" hits="0" branch="false" />
            <line number="52" hits="0" branch="false" />
            <line number="53" hits="0" branch="false" />
            <line number="54" hits="0" branch="false" />
            <line number="56" hits="0" branch="false" />
            <line number="57" hits="0" branch="false" />
            <line number="59" hits="0" branch="false" />
            <line number="60" hits="0" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Dominio.ContatoModule.Contato" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\e-Agenda.Dominio\ContatoModule\Contato.cs" line-rate="0.782608695652174" branch-rate="0.6666666666666666" complexity="5">
          <methods>
            <method name="Nome" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="19" hits="41" branch="false" />
              </lines>
            </method>
            <method name="Email" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="20" hits="69" branch="false" />
              </lines>
            </method>
            <method name="Telefone" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="21" hits="69" branch="false" />
              </lines>
            </method>
            <method name="Cargo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="22" hits="43" branch="false" />
              </lines>
            </method>
            <method name="Empresa" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="23" hits="38" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="10" hits="58" branch="false" />
                <line number="11" hits="58" branch="false" />
                <line number="12" hits="58" branch="false" />
                <line number="13" hits="58" branch="false" />
                <line number="14" hits="58" branch="false" />
                <line number="15" hits="58" branch="false" />
                <line number="16" hits="58" branch="false" />
                <line number="17" hits="58" branch="false" />
              </lines>
            </method>
            <method name="Validar" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines>
                <line number="26" hits="31" branch="false" />
                <line number="27" hits="31" branch="false" />
                <line number="28" hits="31" branch="false" />
                <line number="30" hits="31" branch="true" condition-coverage="100% (2/2)" />
                <line number="31" hits="2" branch="false" />
                <line number="33" hits="31" branch="true" condition-coverage="100% (2/2)" />
                <line number="34" hits="2" branch="false" />
                <line number="36" hits="31" branch="true" condition-coverage="100% (2/2)" />
                <line number="37" hits="28" branch="false" />
                <line number="39" hits="31" branch="false" />
                <line number="40" hits="31" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="43" hits="2" branch="false" />
                <line number="44" hits="2" branch="false" />
                <line number="45" hits="2" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(eAgenda.Dominio.ContatoModule.Contato)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="48" hits="5" branch="false" />
                <line number="49" hits="5" branch="true" condition-coverage="50% (6/12)" />
                <line number="50" hits="5" branch="false" />
                <line number="51" hits="5" branch="false" />
                <line number="52" hits="5" branch="false" />
                <line number="53" hits="5" branch="false" />
                <line number="54" hits="5" branch="false" />
                <line number="55" hits="5" branch="false" />
                <line number="56" hits="5" branch="false" />
              </lines>
            </method>
            <method name="GetHashCode" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="59" hits="0" branch="false" />
                <line number="60" hits="0" branch="false" />
                <line number="61" hits="0" branch="false" />
                <line number="62" hits="0" branch="false" />
                <line number="63" hits="0" branch="false" />
                <line number="64" hits="0" branch="false" />
                <line number="65" hits="0" branch="false" />
                <line number="66" hits="0" branch="false" />
                <line number="67" hits="0" branch="false" />
                <line number="68" hits="0" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="10" hits="58" branch="false" />
            <line number="11" hits="58" branch="false" />
            <line number="12" hits="58" branch="false" />
            <line number="13" hits="58" branch="false" />
            <line number="14" hits="58" branch="false" />
            <line number="15" hits="58" branch="false" />
            <line number="16" hits="58" branch="false" />
            <line number="17" hits="58" branch="false" />
            <line number="19" hits="41" branch="false" />
            <line number="20" hits="69" branch="false" />
            <line number="21" hits="69" branch="false" />
            <line number="22" hits="43" branch="false" />
            <line number="23" hits="38" branch="false" />
            <line number="26" hits="31" branch="false" />
            <line number="27" hits="31" branch="false" />
            <line number="28" hits="31" branch="false" />
            <line number="30" hits="31" branch="true" condition-coverage="100% (2/2)" />
            <line number="31" hits="2" branch="false" />
            <line number="33" hits="31" branch="true" condition-coverage="100% (2/2)" />
            <line number="34" hits="2" branch="false" />
            <line number="36" hits="31" branch="true" condition-coverage="100% (2/2)" />
            <line number="37" hits="28" branch="false" />
            <line number="39" hits="31" branch="false" />
            <line number="40" hits="31" branch="false" />
            <line number="43" hits="2" branch="false" />
            <line number="44" hits="2" branch="false" />
            <line number="45" hits="2" branch="false" />
            <line number="48" hits="5" branch="false" />
            <line number="49" hits="5" branch="true" condition-coverage="50% (6/12)" />
            <line number="50" hits="5" branch="false" />
            <line number="51" hits="5" branch="false" />
            <line number="52" hits="5" branch="false" />
            <line number="53" hits="5" branch="false" />
            <line number="54" hits="5" branch="false" />
            <line number="55" hits="5" branch="false" />
            <line number="56" hits="5" branch="false" />
            <line number="59" hits="0" branch="false" />
            <line number="60" hits="0" branch="false" />
            <line number="61" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
            <line number="63" hits="0" branch="false" />
            <line number="64" hits="0" branch="false" />
            <line number="65" hits="0" branch="false" />
            <line number="66" hits="0" branch="false" />
            <line number="67" hits="0" branch="false" />
            <line number="68" hits="0" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Dominio.ContatoModule.GrupoContato" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\e-Agenda.Dominio\ContatoModule\GrupoContato.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Campo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="13" hits="4" branch="false" />
              </lines>
            </method>
            <method name="Campo" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="13" hits="4" branch="false" />
              </lines>
            </method>
            <method name="Contatos" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="15" hits="9" branch="false" />
              </lines>
            </method>
            <method name="Contatos" signature="(System.Collections.Generic.List`1&lt;eAgenda.Dominio.ContatoModule.Contato&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="15" hits="9" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="7" hits="2" branch="false" />
                <line number="8" hits="2" branch="false" />
                <line number="9" hits="2" branch="false" />
                <line number="10" hits="2" branch="false" />
                <line number="11" hits="2" branch="false" />
              </lines>
            </method>
            <method name="AdicionarContato" signature="(eAgenda.Dominio.ContatoModule.Contato)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="18" hits="5" branch="false" />
                <line number="19" hits="5" branch="false" />
                <line number="20" hits="5" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="7" hits="2" branch="false" />
            <line number="8" hits="2" branch="false" />
            <line number="9" hits="2" branch="false" />
            <line number="10" hits="2" branch="false" />
            <line number="11" hits="2" branch="false" />
            <line number="13" hits="4" branch="false" />
            <line number="15" hits="9" branch="false" />
            <line number="18" hits="5" branch="false" />
            <line number="19" hits="5" branch="false" />
            <line number="20" hits="5" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Dominio.Shared.EntidadeBase" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\e-Agenda.Dominio\Shared\EntidadeBase.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="QuebraDeLinha" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="12" hits="13" branch="false" />
                <line number="13" hits="13" branch="false" />
                <line number="15" hits="13" branch="true" condition-coverage="100% (2/2)" />
                <line number="16" hits="8" branch="false" />
                <line number="18" hits="13" branch="false" />
                <line number="19" hits="13" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="12" hits="13" branch="false" />
            <line number="13" hits="13" branch="false" />
            <line number="15" hits="13" branch="true" condition-coverage="100% (2/2)" />
            <line number="16" hits="8" branch="false" />
            <line number="18" hits="13" branch="false" />
            <line number="19" hits="13" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Dominio.TarefaModule.Prioridade" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\e-Agenda.Dominio\TarefaModule\Prioridade.cs" line-rate="0.8125" branch-rate="0.5" complexity="2">
          <methods>
            <method name="Chave" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="17" hits="17" branch="false" />
                <line number="18" hits="17" branch="false" />
                <line number="19" hits="17" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(eAgenda.Dominio.TarefaModule.PrioridadeEnum)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="10" hits="30" branch="false" />
                <line number="11" hits="30" branch="false" />
                <line number="12" hits="30" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="0.5" complexity="NaN">
              <lines>
                <line number="23" hits="3" branch="false" />
                <line number="24" hits="3" branch="true" condition-coverage="50% (1/2)" />
                <line number="25" hits="3" branch="false" />
                <line number="26" hits="3" branch="false" />
              </lines>
            </method>
            <method name="GetHashCode" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="29" hits="0" branch="false" />
                <line number="30" hits="0" branch="false" />
                <line number="31" hits="0" branch="false" />
              </lines>
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="10" hits="30" branch="false" />
            <line number="11" hits="30" branch="false" />
            <line number="12" hits="30" branch="false" />
            <line number="17" hits="17" branch="false" />
            <line number="18" hits="17" branch="false" />
            <line number="19" hits="17" branch="false" />
            <line number="23" hits="3" branch="false" />
            <line number="24" hits="3" branch="true" condition-coverage="50% (1/2)" />
            <line number="25" hits="3" branch="false" />
            <line number="26" hits="3" branch="false" />
            <line number="29" hits="0" branch="false" />
            <line number="30" hits="0" branch="false" />
            <line number="31" hits="0" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Dominio.TarefaModule.Tarefa" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\e-Agenda.Dominio\TarefaModule\Tarefa.cs" line-rate="0.8" branch-rate="0.7083333333333334" complexity="5">
          <methods>
            <method name="Titulo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="17" hits="51" branch="false" />
              </lines>
            </method>
            <method name="Prioridade" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="19" hits="24" branch="false" />
              </lines>
            </method>
            <method name="DataCriacao" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="21" hits="45" branch="false" />
              </lines>
            </method>
            <method name="Percentual" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="23" hits="57" branch="false" />
              </lines>
            </method>
            <method name="Percentual" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="23" hits="57" branch="false" />
              </lines>
            </method>
            <method name="DataConclusao" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="34" branch="false" />
              </lines>
            </method>
            <method name="DataConclusao" signature="(System.Nullable`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="25" hits="34" branch="false" />
              </lines>
            </method>
            <method name=".ctor" signature="(System.String,System.DateTime,eAgenda.Dominio.TarefaModule.PrioridadeEnum)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="9" hits="30" branch="false" />
                <line number="10" hits="30" branch="false" />
                <line number="11" hits="30" branch="false" />
                <line number="12" hits="30" branch="false" />
                <line number="13" hits="30" branch="false" />
                <line number="14" hits="30" branch="false" />
              </lines>
            </method>
            <method name="AtualizarPercentual" signature="(System.Int32,System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="28" hits="16" branch="false" />
                <line number="29" hits="16" branch="false" />
                <line number="31" hits="16" branch="true" condition-coverage="100% (2/2)" />
                <line number="32" hits="9" branch="false" />
                <line number="33" hits="9" branch="false" />
                <line number="34" hits="9" branch="false" />
                <line number="35" hits="16" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines>
                <line number="38" hits="3" branch="false" />
                <line number="39" hits="3" branch="false" />
                <line number="40" hits="3" branch="false" />
              </lines>
            </method>
            <method name="Equals" signature="(eAgenda.Dominio.TarefaModule.Tarefa)" line-rate="1" branch-rate="0.5625" complexity="NaN">
              <lines>
                <line number="43" hits="3" branch="false" />
                <line number="44" hits="3" branch="true" condition-coverage="56% (9/16)" />
                <line number="45" hits="3" branch="false" />
                <line number="46" hits="3" branch="false" />
                <line number="47" hits="3" branch="false" />
                <line number="48" hits="3" branch="false" />
                <line number="49" hits="3" branch="false" />
                <line number="50" hits="3" branch="false" />
                <line number="51" hits="3" branch="false" />
              </lines>
            </method>
            <method name="GetHashCode" signature="()" line-rate="0" branch-rate="1" complexity="1">
              <lines>
                <line number="54" hits="0" branch="false" />
                <line number="55" hits="0" branch="false" />
                <line number="56" hits="0" branch="false" />
                <line number="57" hits="0" branch="false" />
                <line number="58" hits="0" branch="false" />
                <line number="59" hits="0" branch="false" />
                <line number="60" hits="0" branch="false" />
                <line number="61" hits="0" branch="false" />
                <line number="62" hits="0" branch="false" />
                <line number="63" hits="0" branch="false" />
              </lines>
            </method>
            <method name="Validar" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines>
                <line number="66" hits="21" branch="false" />
                <line number="67" hits="21" branch="false" />
                <line number="69" hits="21" branch="true" condition-coverage="100% (2/2)" />
                <line number="70" hits="2" branch="false" />
                <line number="72" hits="21" branch="true" condition-coverage="100% (2/2)" />
                <line number="73" hits="2" branch="false" />
                <line number="75" hits="21" branch="true" condition-coverage="100% (2/2)" />
                <line number="76" hits="18" branch="false" />
                <line number="78" hits="21" branch="false" />
                <line number="79" hits="21" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="9" hits="30" branch="false" />
            <line number="10" hits="30" branch="false" />
            <line number="11" hits="30" branch="false" />
            <line number="12" hits="30" branch="false" />
            <line number="13" hits="30" branch="false" />
            <line number="14" hits="30" branch="false" />
            <line number="17" hits="51" branch="false" />
            <line number="19" hits="24" branch="false" />
            <line number="21" hits="45" branch="false" />
            <line number="23" hits="57" branch="false" />
            <line number="25" hits="34" branch="false" />
            <line number="28" hits="16" branch="false" />
            <line number="29" hits="16" branch="false" />
            <line number="31" hits="16" branch="true" condition-coverage="100% (2/2)" />
            <line number="32" hits="9" branch="false" />
            <line number="33" hits="9" branch="false" />
            <line number="34" hits="9" branch="false" />
            <line number="35" hits="16" branch="false" />
            <line number="38" hits="3" branch="false" />
            <line number="39" hits="3" branch="false" />
            <line number="40" hits="3" branch="false" />
            <line number="43" hits="3" branch="false" />
            <line number="44" hits="3" branch="true" condition-coverage="56% (9/16)" />
            <line number="45" hits="3" branch="false" />
            <line number="46" hits="3" branch="false" />
            <line number="47" hits="3" branch="false" />
            <line number="48" hits="3" branch="false" />
            <line number="49" hits="3" branch="false" />
            <line number="50" hits="3" branch="false" />
            <line number="51" hits="3" branch="false" />
            <line number="54" hits="0" branch="false" />
            <line number="55" hits="0" branch="false" />
            <line number="56" hits="0" branch="false" />
            <line number="57" hits="0" branch="false" />
            <line number="58" hits="0" branch="false" />
            <line number="59" hits="0" branch="false" />
            <line number="60" hits="0" branch="false" />
            <line number="61" hits="0" branch="false" />
            <line number="62" hits="0" branch="false" />
            <line number="63" hits="0" branch="false" />
            <line number="66" hits="21" branch="false" />
            <line number="67" hits="21" branch="false" />
            <line number="69" hits="21" branch="true" condition-coverage="100% (2/2)" />
            <line number="70" hits="2" branch="false" />
            <line number="72" hits="21" branch="true" condition-coverage="100% (2/2)" />
            <line number="73" hits="2" branch="false" />
            <line number="75" hits="21" branch="true" condition-coverage="100% (2/2)" />
            <line number="76" hits="18" branch="false" />
            <line number="78" hits="21" branch="false" />
            <line number="79" hits="21" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="eAgenda.Tests" line-rate="1" branch-rate="0.5" complexity="44">
      <classes>
        <class name="eAgenda.Tests.CompromissoModule.CompromissoTest" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Tests\CompromissoModule\CompromissoTest.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="DeveValidar_Assunto" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="14" hits="1" branch="false" />
                <line number="16" hits="1" branch="false" />
                <line number="17" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="24" hits="1" branch="false" />
                <line number="25" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_Data" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="29" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_HoraInicio" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="44" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_HoraTermino" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="59" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_Assunto_Data" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="74" hits="1" branch="false" />
                <line number="76" hits="1" branch="false" />
                <line number="77" hits="1" branch="false" />
                <line number="78" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
                <line number="85" hits="1" branch="false" />
                <line number="86" hits="1" branch="false" />
                <line number="87" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_Assunto_Data_HoraInicio" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="91" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
                <line number="95" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
                <line number="102" hits="1" branch="false" />
                <line number="103" hits="1" branch="false" />
                <line number="104" hits="1" branch="false" />
                <line number="105" hits="1" branch="false" />
                <line number="106" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_Assunto_Data_HoraInicio_HoraTermino" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="110" hits="1" branch="false" />
                <line number="112" hits="1" branch="false" />
                <line number="113" hits="1" branch="false" />
                <line number="114" hits="1" branch="false" />
                <line number="117" hits="1" branch="false" />
                <line number="120" hits="1" branch="false" />
                <line number="121" hits="1" branch="false" />
                <line number="122" hits="1" branch="false" />
                <line number="123" hits="1" branch="false" />
                <line number="124" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
                <line number="126" hits="1" branch="false" />
                <line number="127" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="1" branch="false" />
            <line number="16" hits="1" branch="false" />
            <line number="17" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="25" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="76" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="86" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="95" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="102" hits="1" branch="false" />
            <line number="103" hits="1" branch="false" />
            <line number="104" hits="1" branch="false" />
            <line number="105" hits="1" branch="false" />
            <line number="106" hits="1" branch="false" />
            <line number="110" hits="1" branch="false" />
            <line number="112" hits="1" branch="false" />
            <line number="113" hits="1" branch="false" />
            <line number="114" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="120" hits="1" branch="false" />
            <line number="121" hits="1" branch="false" />
            <line number="122" hits="1" branch="false" />
            <line number="123" hits="1" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="126" hits="1" branch="false" />
            <line number="127" hits="1" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Tests.CompromissoModule.ControladorCompromissoTest" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Tests\CompromissoModule\ControladorCompromisoTest.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="16" hits="11" branch="false" />
                <line number="17" hits="11" branch="false" />
                <line number="19" hits="11" branch="false" />
                <line number="20" hits="11" branch="false" />
                <line number="21" hits="11" branch="false" />
                <line number="22" hits="11" branch="false" />
                <line number="23" hits="11" branch="false" />
                <line number="24" hits="11" branch="false" />
                <line number="25" hits="11" branch="false" />
              </lines>
            </method>
            <method name="DeveInserir_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="29" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
                <line number="39" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveInserirSemContato_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="44" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="54" hits="1" branch="false" />
                <line number="55" hits="1" branch="false" />
                <line number="56" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveEditar_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="59" hits="1" branch="false" />
                <line number="61" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="64" hits="1" branch="false" />
                <line number="65" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
                <line number="70" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="75" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveEditarComContatoNullAdicionandoContato_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="78" hits="1" branch="false" />
                <line number="80" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
                <line number="82" hits="1" branch="false" />
                <line number="83" hits="1" branch="false" />
                <line number="84" hits="1" branch="false" />
                <line number="87" hits="1" branch="false" />
                <line number="90" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
                <line number="92" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveEditarComContatoAdicionandoContatoNull_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="95" hits="1" branch="false" />
                <line number="97" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="99" hits="1" branch="false" />
                <line number="100" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
                <line number="104" hits="1" branch="false" />
                <line number="107" hits="1" branch="false" />
                <line number="108" hits="1" branch="false" />
                <line number="109" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveExcluir_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="113" hits="1" branch="false" />
                <line number="115" hits="1" branch="false" />
                <line number="116" hits="1" branch="false" />
                <line number="117" hits="1" branch="false" />
                <line number="118" hits="1" branch="false" />
                <line number="121" hits="1" branch="false" />
                <line number="124" hits="1" branch="false" />
                <line number="125" hits="1" branch="false" />
                <line number="126" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionarTodos_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="129" hits="1" branch="false" />
                <line number="131" hits="1" branch="false" />
                <line number="132" hits="1" branch="false" />
                <line number="133" hits="1" branch="false" />
                <line number="134" hits="1" branch="false" />
                <line number="135" hits="1" branch="false" />
                <line number="136" hits="1" branch="false" />
                <line number="137" hits="1" branch="false" />
                <line number="138" hits="1" branch="false" />
                <line number="139" hits="1" branch="false" />
                <line number="140" hits="1" branch="false" />
                <line number="141" hits="1" branch="false" />
                <line number="142" hits="1" branch="false" />
                <line number="144" hits="1" branch="false" />
                <line number="147" hits="1" branch="false" />
                <line number="148" hits="1" branch="false" />
                <line number="149" hits="1" branch="false" />
                <line number="150" hits="1" branch="false" />
                <line number="151" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionarTodosPassados_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="154" hits="1" branch="false" />
                <line number="156" hits="1" branch="false" />
                <line number="157" hits="1" branch="false" />
                <line number="158" hits="1" branch="false" />
                <line number="159" hits="1" branch="false" />
                <line number="160" hits="1" branch="false" />
                <line number="161" hits="1" branch="false" />
                <line number="162" hits="1" branch="false" />
                <line number="163" hits="1" branch="false" />
                <line number="164" hits="1" branch="false" />
                <line number="165" hits="1" branch="false" />
                <line number="166" hits="1" branch="false" />
                <line number="167" hits="1" branch="false" />
                <line number="169" hits="1" branch="false" />
                <line number="172" hits="1" branch="false" />
                <line number="173" hits="1" branch="false" />
                <line number="174" hits="1" branch="false" />
                <line number="176" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionarTodosfuturos_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="179" hits="1" branch="false" />
                <line number="181" hits="1" branch="false" />
                <line number="182" hits="1" branch="false" />
                <line number="183" hits="1" branch="false" />
                <line number="184" hits="1" branch="false" />
                <line number="185" hits="1" branch="false" />
                <line number="186" hits="1" branch="false" />
                <line number="187" hits="1" branch="false" />
                <line number="188" hits="1" branch="false" />
                <line number="189" hits="1" branch="false" />
                <line number="190" hits="1" branch="false" />
                <line number="191" hits="1" branch="false" />
                <line number="192" hits="1" branch="false" />
                <line number="194" hits="1" branch="false" />
                <line number="197" hits="1" branch="false" />
                <line number="198" hits="1" branch="false" />
                <line number="200" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionarValidarDatasE_HorasIguais_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="203" hits="1" branch="false" />
                <line number="204" hits="1" branch="false" />
                <line number="205" hits="1" branch="false" />
                <line number="206" hits="1" branch="false" />
                <line number="207" hits="1" branch="false" />
                <line number="209" hits="1" branch="false" />
                <line number="210" hits="1" branch="false" />
                <line number="211" hits="1" branch="false" />
                <line number="212" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionarValidarDatasE_HorasEntreOs_Compromisso" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="215" hits="1" branch="false" />
                <line number="216" hits="1" branch="false" />
                <line number="217" hits="1" branch="false" />
                <line number="218" hits="1" branch="false" />
                <line number="219" hits="1" branch="false" />
                <line number="221" hits="1" branch="false" />
                <line number="222" hits="1" branch="false" />
                <line number="223" hits="1" branch="false" />
                <line number="224" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="16" hits="11" branch="false" />
            <line number="17" hits="11" branch="false" />
            <line number="19" hits="11" branch="false" />
            <line number="20" hits="11" branch="false" />
            <line number="21" hits="11" branch="false" />
            <line number="22" hits="11" branch="false" />
            <line number="23" hits="11" branch="false" />
            <line number="24" hits="11" branch="false" />
            <line number="25" hits="11" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="55" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="61" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="64" hits="1" branch="false" />
            <line number="65" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="70" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="83" hits="1" branch="false" />
            <line number="84" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="90" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="95" hits="1" branch="false" />
            <line number="97" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="99" hits="1" branch="false" />
            <line number="100" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="104" hits="1" branch="false" />
            <line number="107" hits="1" branch="false" />
            <line number="108" hits="1" branch="false" />
            <line number="109" hits="1" branch="false" />
            <line number="113" hits="1" branch="false" />
            <line number="115" hits="1" branch="false" />
            <line number="116" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="118" hits="1" branch="false" />
            <line number="121" hits="1" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="125" hits="1" branch="false" />
            <line number="126" hits="1" branch="false" />
            <line number="129" hits="1" branch="false" />
            <line number="131" hits="1" branch="false" />
            <line number="132" hits="1" branch="false" />
            <line number="133" hits="1" branch="false" />
            <line number="134" hits="1" branch="false" />
            <line number="135" hits="1" branch="false" />
            <line number="136" hits="1" branch="false" />
            <line number="137" hits="1" branch="false" />
            <line number="138" hits="1" branch="false" />
            <line number="139" hits="1" branch="false" />
            <line number="140" hits="1" branch="false" />
            <line number="141" hits="1" branch="false" />
            <line number="142" hits="1" branch="false" />
            <line number="144" hits="1" branch="false" />
            <line number="147" hits="1" branch="false" />
            <line number="148" hits="1" branch="false" />
            <line number="149" hits="1" branch="false" />
            <line number="150" hits="1" branch="false" />
            <line number="151" hits="1" branch="false" />
            <line number="154" hits="1" branch="false" />
            <line number="156" hits="1" branch="false" />
            <line number="157" hits="1" branch="false" />
            <line number="158" hits="1" branch="false" />
            <line number="159" hits="1" branch="false" />
            <line number="160" hits="1" branch="false" />
            <line number="161" hits="1" branch="false" />
            <line number="162" hits="1" branch="false" />
            <line number="163" hits="1" branch="false" />
            <line number="164" hits="1" branch="false" />
            <line number="165" hits="1" branch="false" />
            <line number="166" hits="1" branch="false" />
            <line number="167" hits="1" branch="false" />
            <line number="169" hits="1" branch="false" />
            <line number="172" hits="1" branch="false" />
            <line number="173" hits="1" branch="false" />
            <line number="174" hits="1" branch="false" />
            <line number="176" hits="1" branch="false" />
            <line number="179" hits="1" branch="false" />
            <line number="181" hits="1" branch="false" />
            <line number="182" hits="1" branch="false" />
            <line number="183" hits="1" branch="false" />
            <line number="184" hits="1" branch="false" />
            <line number="185" hits="1" branch="false" />
            <line number="186" hits="1" branch="false" />
            <line number="187" hits="1" branch="false" />
            <line number="188" hits="1" branch="false" />
            <line number="189" hits="1" branch="false" />
            <line number="190" hits="1" branch="false" />
            <line number="191" hits="1" branch="false" />
            <line number="192" hits="1" branch="false" />
            <line number="194" hits="1" branch="false" />
            <line number="197" hits="1" branch="false" />
            <line number="198" hits="1" branch="false" />
            <line number="200" hits="1" branch="false" />
            <line number="203" hits="1" branch="false" />
            <line number="204" hits="1" branch="false" />
            <line number="205" hits="1" branch="false" />
            <line number="206" hits="1" branch="false" />
            <line number="207" hits="1" branch="false" />
            <line number="209" hits="1" branch="false" />
            <line number="210" hits="1" branch="false" />
            <line number="211" hits="1" branch="false" />
            <line number="212" hits="1" branch="false" />
            <line number="215" hits="1" branch="false" />
            <line number="216" hits="1" branch="false" />
            <line number="217" hits="1" branch="false" />
            <line number="218" hits="1" branch="false" />
            <line number="219" hits="1" branch="false" />
            <line number="221" hits="1" branch="false" />
            <line number="222" hits="1" branch="false" />
            <line number="223" hits="1" branch="false" />
            <line number="224" hits="1" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Tests.ContatoModule.ContatoTest" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Tests\ContatoModule\ContatoTest.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="DeveValidar_Email" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="13" hits="1" branch="false" />
                <line number="15" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="22" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_Telefone" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="26" hits="1" branch="false" />
                <line number="28" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_Email_Telefone" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="39" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="52" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="1" branch="false" />
            <line number="15" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="22" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="39" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="52" hits="1" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Tests.ContatoModule.ControladorContatoTest" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Tests\ContatoModule\ControladorContatoTest.cs" line-rate="1" branch-rate="0.5" complexity="8">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="15" hits="6" branch="false" />
                <line number="17" hits="6" branch="false" />
                <line number="18" hits="6" branch="false" />
                <line number="19" hits="6" branch="false" />
                <line number="20" hits="6" branch="false" />
                <line number="21" hits="6" branch="false" />
                <line number="22" hits="6" branch="false" />
              </lines>
            </method>
            <method name="DeveInserir_Contato" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="26" hits="1" branch="false" />
                <line number="28" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveAtualizar_Contato" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="40" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="45" hits="1" branch="false" />
                <line number="48" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="52" hits="1" branch="false" />
                <line number="53" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveExcluir_Contato" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="57" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="60" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
                <line number="68" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionar_Contato_PorId" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="72" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="75" hits="1" branch="false" />
                <line number="78" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
                <line number="82" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionar_TodosContatos" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="86" hits="1" branch="false" />
                <line number="88" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
                <line number="92" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
                <line number="95" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
                <line number="102" hits="1" branch="false" />
                <line number="103" hits="1" branch="false" />
                <line number="104" hits="1" branch="false" />
                <line number="105" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionar_ContatosAgrupados_PorCargo" signature="()" line-rate="1" branch-rate="0.5" complexity="2">
              <lines>
                <line number="109" hits="1" branch="false" />
                <line number="111" hits="1" branch="false" />
                <line number="112" hits="1" branch="false" />
                <line number="114" hits="1" branch="false" />
                <line number="115" hits="1" branch="false" />
                <line number="117" hits="1" branch="false" />
                <line number="118" hits="1" branch="false" />
                <line number="120" hits="1" branch="false" />
                <line number="121" hits="1" branch="false" />
                <line number="123" hits="1" branch="false" />
                <line number="124" hits="1" branch="false" />
                <line number="127" hits="6" branch="true" condition-coverage="50% (1/2)" />
                <line number="130" hits="1" branch="false" />
                <line number="132" hits="1" branch="false" />
                <line number="133" hits="1" branch="false" />
                <line number="135" hits="1" branch="false" />
                <line number="136" hits="1" branch="false" />
                <line number="137" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="15" hits="6" branch="false" />
            <line number="17" hits="6" branch="false" />
            <line number="18" hits="6" branch="false" />
            <line number="19" hits="6" branch="false" />
            <line number="20" hits="6" branch="false" />
            <line number="21" hits="6" branch="false" />
            <line number="22" hits="6" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="45" hits="1" branch="false" />
            <line number="48" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="52" hits="1" branch="false" />
            <line number="53" hits="1" branch="false" />
            <line number="57" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="60" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="68" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
            <line number="78" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="86" hits="1" branch="false" />
            <line number="88" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="92" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="95" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="102" hits="1" branch="false" />
            <line number="103" hits="1" branch="false" />
            <line number="104" hits="1" branch="false" />
            <line number="105" hits="1" branch="false" />
            <line number="109" hits="1" branch="false" />
            <line number="111" hits="1" branch="false" />
            <line number="112" hits="1" branch="false" />
            <line number="114" hits="1" branch="false" />
            <line number="115" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="118" hits="1" branch="false" />
            <line number="120" hits="1" branch="false" />
            <line number="121" hits="1" branch="false" />
            <line number="123" hits="1" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="127" hits="6" branch="true" condition-coverage="50% (1/2)" />
            <line number="130" hits="1" branch="false" />
            <line number="132" hits="1" branch="false" />
            <line number="133" hits="1" branch="false" />
            <line number="135" hits="1" branch="false" />
            <line number="136" hits="1" branch="false" />
            <line number="137" hits="1" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Tests.TarefaModule.ControladorTarefaTest" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Tests\TarefaModule\ControladorTarefaTest.cs" line-rate="1" branch-rate="1" complexity="8">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="14" hits="7" branch="false" />
                <line number="16" hits="7" branch="false" />
                <line number="17" hits="7" branch="false" />
                <line number="18" hits="7" branch="false" />
                <line number="19" hits="7" branch="false" />
                <line number="20" hits="7" branch="false" />
              </lines>
            </method>
            <method name="DeveInserir_Tarefa" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="24" hits="1" branch="false" />
                <line number="26" hits="1" branch="false" />
                <line number="29" hits="1" branch="false" />
                <line number="32" hits="1" branch="false" />
                <line number="33" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveEditar_UmaTarefa" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="38" hits="1" branch="false" />
                <line number="40" hits="1" branch="false" />
                <line number="41" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="44" hits="1" branch="false" />
                <line number="47" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
                <line number="51" hits="1" branch="false" />
                <line number="52" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveExcluir_UmaTarefa" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="56" hits="1" branch="false" />
                <line number="58" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="65" hits="1" branch="false" />
                <line number="66" hits="1" branch="false" />
                <line number="67" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionar_Tarefa_PorId" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="71" hits="1" branch="false" />
                <line number="73" hits="1" branch="false" />
                <line number="74" hits="1" branch="false" />
                <line number="77" hits="1" branch="false" />
                <line number="80" hits="1" branch="false" />
                <line number="81" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionar_TodasTarefas_OrdenadasPorPrioridade" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="85" hits="1" branch="false" />
                <line number="87" hits="1" branch="false" />
                <line number="88" hits="1" branch="false" />
                <line number="90" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
                <line number="98" hits="1" branch="false" />
                <line number="101" hits="1" branch="false" />
                <line number="102" hits="1" branch="false" />
                <line number="103" hits="1" branch="false" />
                <line number="104" hits="1" branch="false" />
                <line number="105" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionar_TarefasConcluidas_OrdenadasPorPrioridade" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="109" hits="1" branch="false" />
                <line number="111" hits="1" branch="false" />
                <line number="112" hits="1" branch="false" />
                <line number="114" hits="1" branch="false" />
                <line number="115" hits="1" branch="false" />
                <line number="117" hits="1" branch="false" />
                <line number="118" hits="1" branch="false" />
                <line number="120" hits="1" branch="false" />
                <line number="121" hits="1" branch="false" />
                <line number="124" hits="1" branch="false" />
                <line number="127" hits="1" branch="false" />
                <line number="128" hits="1" branch="false" />
                <line number="129" hits="1" branch="false" />
                <line number="130" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveSelecionar_TarefasPendentes_OrdenadasPorPrioridade" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="134" hits="1" branch="false" />
                <line number="136" hits="1" branch="false" />
                <line number="137" hits="1" branch="false" />
                <line number="139" hits="1" branch="false" />
                <line number="140" hits="1" branch="false" />
                <line number="142" hits="1" branch="false" />
                <line number="143" hits="1" branch="false" />
                <line number="144" hits="1" branch="false" />
                <line number="147" hits="1" branch="false" />
                <line number="150" hits="1" branch="false" />
                <line number="151" hits="1" branch="false" />
                <line number="152" hits="1" branch="false" />
                <line number="153" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="14" hits="7" branch="false" />
            <line number="16" hits="7" branch="false" />
            <line number="17" hits="7" branch="false" />
            <line number="18" hits="7" branch="false" />
            <line number="19" hits="7" branch="false" />
            <line number="20" hits="7" branch="false" />
            <line number="24" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="29" hits="1" branch="false" />
            <line number="32" hits="1" branch="false" />
            <line number="33" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="38" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="41" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="44" hits="1" branch="false" />
            <line number="47" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="51" hits="1" branch="false" />
            <line number="52" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="58" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="65" hits="1" branch="false" />
            <line number="66" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="71" hits="1" branch="false" />
            <line number="73" hits="1" branch="false" />
            <line number="74" hits="1" branch="false" />
            <line number="77" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="81" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="87" hits="1" branch="false" />
            <line number="88" hits="1" branch="false" />
            <line number="90" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
            <line number="98" hits="1" branch="false" />
            <line number="101" hits="1" branch="false" />
            <line number="102" hits="1" branch="false" />
            <line number="103" hits="1" branch="false" />
            <line number="104" hits="1" branch="false" />
            <line number="105" hits="1" branch="false" />
            <line number="109" hits="1" branch="false" />
            <line number="111" hits="1" branch="false" />
            <line number="112" hits="1" branch="false" />
            <line number="114" hits="1" branch="false" />
            <line number="115" hits="1" branch="false" />
            <line number="117" hits="1" branch="false" />
            <line number="118" hits="1" branch="false" />
            <line number="120" hits="1" branch="false" />
            <line number="121" hits="1" branch="false" />
            <line number="124" hits="1" branch="false" />
            <line number="127" hits="1" branch="false" />
            <line number="128" hits="1" branch="false" />
            <line number="129" hits="1" branch="false" />
            <line number="130" hits="1" branch="false" />
            <line number="134" hits="1" branch="false" />
            <line number="136" hits="1" branch="false" />
            <line number="137" hits="1" branch="false" />
            <line number="139" hits="1" branch="false" />
            <line number="140" hits="1" branch="false" />
            <line number="142" hits="1" branch="false" />
            <line number="143" hits="1" branch="false" />
            <line number="144" hits="1" branch="false" />
            <line number="147" hits="1" branch="false" />
            <line number="150" hits="1" branch="false" />
            <line number="151" hits="1" branch="false" />
            <line number="152" hits="1" branch="false" />
            <line number="153" hits="1" branch="false" />
          </lines>
        </class>
        <class name="eAgenda.Tests.TarefaModule.TarefaTest" filename="C:\Users\odair\OneDrive\Área de Trabalho\academia2021\e-Agenda-master\eAgenda.Tests\TarefaModule\TarefaTest.cs" line-rate="1" branch-rate="1" complexity="6">
          <methods>
            <method name="DeveCriar_Tarefa" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="13" hits="1" branch="false" />
                <line number="15" hits="1" branch="false" />
                <line number="18" hits="1" branch="false" />
                <line number="19" hits="1" branch="false" />
                <line number="20" hits="1" branch="false" />
                <line number="21" hits="1" branch="false" />
                <line number="22" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveRegistrarDataConclusao" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="26" hits="1" branch="false" />
                <line number="28" hits="1" branch="false" />
                <line number="31" hits="1" branch="false" />
                <line number="34" hits="1" branch="false" />
                <line number="35" hits="1" branch="false" />
                <line number="36" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveRetornar_TarefaValida" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="40" hits="1" branch="false" />
                <line number="42" hits="1" branch="false" />
                <line number="43" hits="1" branch="false" />
                <line number="46" hits="1" branch="false" />
                <line number="49" hits="1" branch="false" />
                <line number="50" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_DataCriacao" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="54" hits="1" branch="false" />
                <line number="56" hits="1" branch="false" />
                <line number="59" hits="1" branch="false" />
                <line number="62" hits="1" branch="false" />
                <line number="63" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_Titulo" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="67" hits="1" branch="false" />
                <line number="69" hits="1" branch="false" />
                <line number="72" hits="1" branch="false" />
                <line number="75" hits="1" branch="false" />
                <line number="76" hits="1" branch="false" />
              </lines>
            </method>
            <method name="DeveValidar_QuebraDeLinha_Titulo_DataCriacao" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines>
                <line number="80" hits="1" branch="false" />
                <line number="82" hits="1" branch="false" />
                <line number="85" hits="1" branch="false" />
                <line number="88" hits="1" branch="false" />
                <line number="89" hits="1" branch="false" />
                <line number="90" hits="1" branch="false" />
                <line number="91" hits="1" branch="false" />
                <line number="93" hits="1" branch="false" />
                <line number="94" hits="1" branch="false" />
              </lines>
            </method>
          </methods>
          <lines>
            <line number="13" hits="1" branch="false" />
            <line number="15" hits="1" branch="false" />
            <line number="18" hits="1" branch="false" />
            <line number="19" hits="1" branch="false" />
            <line number="20" hits="1" branch="false" />
            <line number="21" hits="1" branch="false" />
            <line number="22" hits="1" branch="false" />
            <line number="26" hits="1" branch="false" />
            <line number="28" hits="1" branch="false" />
            <line number="31" hits="1" branch="false" />
            <line number="34" hits="1" branch="false" />
            <line number="35" hits="1" branch="false" />
            <line number="36" hits="1" branch="false" />
            <line number="40" hits="1" branch="false" />
            <line number="42" hits="1" branch="false" />
            <line number="43" hits="1" branch="false" />
            <line number="46" hits="1" branch="false" />
            <line number="49" hits="1" branch="false" />
            <line number="50" hits="1" branch="false" />
            <line number="54" hits="1" branch="false" />
            <line number="56" hits="1" branch="false" />
            <line number="59" hits="1" branch="false" />
            <line number="62" hits="1" branch="false" />
            <line number="63" hits="1" branch="false" />
            <line number="67" hits="1" branch="false" />
            <line number="69" hits="1" branch="false" />
            <line number="72" hits="1" branch="false" />
            <line number="75" hits="1" branch="false" />
            <line number="76" hits="1" branch="false" />
            <line number="80" hits="1" branch="false" />
            <line number="82" hits="1" branch="false" />
            <line number="85" hits="1" branch="false" />
            <line number="88" hits="1" branch="false" />
            <line number="89" hits="1" branch="false" />
            <line number="90" hits="1" branch="false" />
            <line number="91" hits="1" branch="false" />
            <line number="93" hits="1" branch="false" />
            <line number="94" hits="1" branch="false" />
          </lines>
        </class>
      </classes>
    </package>
    <package name="FluentAssertions" line-rate="0.022985863693828296" branch-rate="0.01498847040737894" complexity="3162">
      <classes>
        <class name="FluentAssertions.AggregateExceptionExtractor" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\AggregateExceptionExtractor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="OfType" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExtractedExceptions" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.AndConstraint`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\AndConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="And" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.AndWhichConstraint`2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\AndWhichConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Which" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TParentConstraint,TMatchedElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TParentConstraint,System.Collections.Generic.IEnumerable`1&lt;TMatchedElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SingleOrDefault" signature="(System.Collections.Generic.IEnumerable`1&lt;TMatchedElement&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.AssertionExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\AssertionExtensions.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Invoking" signature="(T,System.Action`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoking" signature="(T,System.Func`2&lt;T,TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Awaiting" signature="(T,System.Func`2&lt;T,System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Awaiting" signature="(T,System.Func`2&lt;T,System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTimeOf" signature="(T,System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecutionTime" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(FluentAssertions.Specialized.ExecutionTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Xml.Linq.XDocument)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Xml.Linq.XAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Enumerating" signature="(System.Func`1&lt;System.Collections.IEnumerable&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Enumerating" signature="(System.Func`1&lt;System.Collections.Generic.IEnumerable`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForceEnumeration" signature="(System.Func`1&lt;System.Collections.IEnumerable&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Guid)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.Guid&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.DateTimeOffset&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.IComparable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.UInt32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.UInt32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Decimal)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.Decimal&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Byte)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.Byte&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.SByte)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.SByte&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Int16)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.Int16&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.UInt16)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.UInt16&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.Int64&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.UInt64&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Single)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.Single&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.Double&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Nullable`1&lt;System.TimeSpan&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(FluentAssertions.Types.TypeSelector)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Reflection.ConstructorInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(FluentAssertions.Types.MethodInfoSelector)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(FluentAssertions.Types.PropertyInfoSelector)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Func`1&lt;System.Threading.Tasks.Task`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Func`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Monitor" signature="(T,System.Func`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="As" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WithMessage" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.AssertionOptions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\AssertionOptions.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="EquivalencySteps" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EquivalencySteps" signature="(FluentAssertions.EquivalencyStepCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="CloneDefaults" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AssertEquivalencyUsing" signature="(System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions,FluentAssertions.Equivalency.EquivalencyAssertionOptions&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.AtLeast" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\AtLeast.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Once" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Twice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Thrice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Times" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assert" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.AtMost" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\AtMost.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Once" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Twice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Thrice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Times" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assert" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.CallerIdentifier" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\CallerIdentifier.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="DetermineCallerIdentity" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="IsCustomAssertion" signature="(System.Diagnostics.StackFrame)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDynamic" signature="(System.Diagnostics.StackFrame)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCurrentAssembly" signature="(System.Diagnostics.StackFrame)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDotNet" signature="(System.Diagnostics.StackFrame)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExtractVariableNameFrom" signature="(System.Diagnostics.StackFrame)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSourceCodeLineFrom" signature="(System.Diagnostics.StackFrame)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UsesNewKeyword" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsStringLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNumeric" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsBooleanLiteral" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Collections.CollectionAssertions`2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Collections\CollectionAssertions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(TSubject)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNullOrEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNullOrEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnlyHaveUniqueItems" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainNulls" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertSubjectEquality" signature="(System.Collections.IEnumerable,System.Func`3&lt;TActual,TExpected,System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEqual" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Collections.Generic.IEnumerable`1&lt;TExpectation&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Collections.IEnumerable,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;System.Collections.IEnumerable&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;System.Collections.IEnumerable&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Collections.Generic.IEnumerable`1&lt;TExpectation&gt;,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainEquivalentOf" signature="(TExpectation,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainEquivalentOf" signature="(TExpectation,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainItemsAssignableTo" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMissingItems" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainInOrder" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainInOrder" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInAscendingOrder" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInAscendingOrder" signature="(System.Collections.Generic.IComparer`1&lt;System.Object&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInDescendingOrder" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInDescendingOrder" signature="(System.Collections.Generic.IComparer`1&lt;System.Object&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInOrder" signature="(System.Collections.Generic.IComparer`1&lt;System.Object&gt;,FluentAssertions.Collections.SortOrder,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAscendingInOrder" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInAscendingOrder" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAscendingInOrder" signature="(System.Collections.Generic.IComparer`1&lt;System.Object&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInAscendingOrder" signature="(System.Collections.Generic.IComparer`1&lt;System.Object&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDescendingInOrder" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInDescendingOrder" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDescendingInOrder" signature="(System.Collections.Generic.IComparer`1&lt;System.Object&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInDescendingOrder" signature="(System.Collections.Generic.IComparer`1&lt;System.Object&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInOrder" signature="(System.Collections.Generic.IComparer`1&lt;System.Object&gt;,FluentAssertions.Collections.SortOrder,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeSubsetOf" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeSubsetOf" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveSameCount" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveSameCount" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElementAt" signature="(System.Int32,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IntersectWith" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotIntersectWith" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartWith" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionStartsWith" signature="(System.Collections.Generic.IEnumerable`1&lt;TActual&gt;,TExpected[],System.Func`3&lt;TActual,TExpected,System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionStartsWith" signature="(System.Collections.Generic.IEnumerable`1&lt;TActual&gt;,System.Collections.Generic.ICollection`1&lt;TExpected&gt;,System.Func`3&lt;TActual,TExpected,System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndWith" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionEndsWith" signature="(System.Collections.Generic.IEnumerable`1&lt;TActual&gt;,TExpected[],System.Func`3&lt;TActual,TExpected,System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionEndsWith" signature="(System.Collections.Generic.IEnumerable`1&lt;TActual&gt;,System.Collections.Generic.ICollection`1&lt;TExpected&gt;,System.Func`3&lt;TActual,TExpected,System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElementPreceding" signature="(System.Object,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasPredecessor" signature="(System.Object,System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PredecessorOf" signature="(System.Object,System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElementSucceeding" signature="(System.Object,System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasSuccessor" signature="(System.Object,System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SuccessorOf" signature="(System.Object,System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllBeAssignableTo" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllBeAssignableTo" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllBeOfType" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllBeOfType" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetType" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Collections.GenericCollectionAssertions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Collections\GenericCollectionAssertions.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainNulls" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TKey&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnlyHaveUniqueItems" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TKey&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInAscendingOrder" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInAscendingOrder" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInAscendingOrder" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInAscendingOrder" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInAscendingOrder" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.Collections.Generic.IComparer`1&lt;TSelector&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInAscendingOrder" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.Collections.Generic.IComparer`1&lt;TSelector&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInDescendingOrder" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInDescendingOrder" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInDescendingOrder" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInDescendingOrder" signature="(System.Collections.Generic.IComparer`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInDescendingOrder" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.Collections.Generic.IComparer`1&lt;TSelector&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInDescendingOrder" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.Collections.Generic.IComparer`1&lt;TSelector&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOrderedBy" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.Collections.Generic.IComparer`1&lt;TSelector&gt;,FluentAssertions.Collections.SortOrder,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeOrderedBy" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.Collections.Generic.IComparer`1&lt;TSelector&gt;,FluentAssertions.Collections.SortOrder,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsValidProperty" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertToOrderedEnumerable" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;,System.Collections.Generic.IComparer`1&lt;TSelector&gt;,FluentAssertions.Collections.SortOrder,System.Collections.Generic.ICollection`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExpressionOrderString" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TSelector&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllBeEquivalentTo" signature="(TExpectation,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllBeEquivalentTo" signature="(TExpectation,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RepeatAsManyAs" signature="(TExpectation,System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RepeatAsManyAsIterator" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Collections.GenericDictionaryAssertions`2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Collections\GenericDictionaryAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCount" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveCount" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountGreaterThan" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountGreaterOrEqualTo" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountLessThan" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountLessOrEqualTo" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCount" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Int32,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveSameCount" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveSameCount" signature="(System.Collections.IEnumerable,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEqual" signature="(System.Collections.Generic.IDictionary`2&lt;TKey,TValue&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(TExpectation,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(TExpectation,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainKey" signature="(TKey,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainKeys" signature="(TKey[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TKey&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainKey" signature="(TKey,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainKeys" signature="(TKey[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainKeys" signature="(System.Collections.Generic.IEnumerable`1&lt;TKey&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainValue" signature="(TValue,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainValues" signature="(TValue[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainValues" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainValuesAndWhich" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RepetitionPreservingIntersect" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.Collections.Generic.IEnumerable`1&lt;TValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainValue" signature="(TValue,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainValues" signature="(TValue[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainValues" signature="(System.Collections.Generic.IEnumerable`1&lt;TValue&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(TKey,TValue,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(System.Collections.Generic.KeyValuePair`2&lt;TKey,TValue&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(TKey,TValue,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Collections.NonGenericCollectionAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Collections\NonGenericCollectionAssertions.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCount" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveCount" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountGreaterThan" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountGreaterOrEqualTo" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountLessThan" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountLessOrEqualTo" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCount" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Int32,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMostLocalCount" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Contain" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Collections.SelfReferencingCollectionAssertions`2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Collections\SelfReferencingCollectionAssertions.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCount" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCount" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Int32,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveCount" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountGreaterThan" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountGreaterOrEqualTo" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountLessThan" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveCountLessOrEqualTo" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(T[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetComparer" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="Equal" signature="(System.Collections.Generic.IEnumerable`1&lt;TExpected&gt;,System.Func`3&lt;T,TExpected,System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartWith" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartWith" signature="(System.Collections.Generic.IEnumerable`1&lt;TExpected&gt;,System.Func`3&lt;T,TExpected,System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndWith" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndWith" signature="(System.Collections.Generic.IEnumerable`1&lt;TExpected&gt;,System.Func`3&lt;T,TExpected,System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,T[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnlyContain" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,T[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainSingle" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainSingle" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SatisfyRespectively" signature="(System.Action`1&lt;T&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SatisfyRespectively" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Action`1&lt;T&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectFailuresFromInspectors" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Action`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Collections.StringCollectionAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Collections\StringCollectionAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equal" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;System.String&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;System.String&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainInOrder" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainInOrder" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainMatch" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsMatch" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllThatMatch" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Collections.WhichValueConstraint`2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Collections\WhichValueConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="WhichValue" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WhichValue" signature="(TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Collections.GenericDictionaryAssertions`2&lt;TKey,TValue&gt;,TValue)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.AppSettingsConfigurationStore" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\AppSettingsConfigurationStore.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetSetting" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.Clock" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\Clock.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Delay" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DelayAsync" signature="(System.TimeSpan,System.Threading.CancellationToken)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Wait" signature="(System.Threading.Tasks.Task,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartTimer" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.Configuration" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\Configuration.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Current" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueFormatterDetectionMode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueFormatterDetectionMode" signature="(FluentAssertions.Common.ValueFormatterDetectionMode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueFormatterAssembly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValueFormatterAssembly" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TestFrameworkName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Common.IConfigurationStore)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DetermineFormatterDetectionMode" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.ConfigurationStoreExceptionInterceptor" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\ConfigurationStoreExceptionInterceptor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Common.IConfigurationStore)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSetting" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.CSharpAccessModifierExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\CSharpAccessModifierExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetCSharpAccessModifier" signature="(System.Reflection.MethodBase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCSharpAccessModifier" signature="(System.Reflection.FieldInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCSharpAccessModifier" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.DateTimeExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\DateTimeExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ToDateTimeOffset" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToDateTimeOffset" signature="(System.DateTime,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.EnumerableExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\EnumerableExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ConvertOrCastToCollection" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertOrCastToCollection" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertOrCastToList" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertOrCastToList" signature="(System.Collections.IEnumerable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IndexOfFirstDifferenceWith" signature="(System.Collections.Generic.IEnumerable`1&lt;TFirst&gt;,System.Collections.Generic.IEnumerable`1&lt;TSecond&gt;,System.Func`3&lt;TFirst,TSecond,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.ExceptionExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\ExceptionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Unwrap" signature="(System.Reflection.TargetInvocationException)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.ExpressionExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\ExpressionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetSelectedMemberInfo" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TValue&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPropertyInfo" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TValue&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttemptToGetMemberInfoFromMemberExpression" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TValue&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AttemptToGetMemberInfoFromCastExpression" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,TValue&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMemberPath" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TDeclaringType,TPropertyType&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.FullFrameworkReflector" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\FullFrameworkReflector.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetAllTypesFromAppDomain" signature="(System.Func`2&lt;System.Reflection.Assembly,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRelevant" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDynamic" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExportedTypes" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.Guard" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\Guard.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ThrowIfArgumentIsNull" signature="(T,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfArgumentIsNull" signature="(T,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfArgumentIsNullOrEmpty" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfArgumentIsNullOrEmpty" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.IntegerExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\IntegerExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Times" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.MemberPath" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\MemberPath.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsParentOrChildOf" signature="(FluentAssertions.Common.MemberPath)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSameAs" signature="(FluentAssertions.Common.MemberPath)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsChild" signature="(FluentAssertions.Common.MemberPath)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsParent" signature="(FluentAssertions.Common.MemberPath)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSegments" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.MethodInfoExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\MethodInfoExtensions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IsAsync" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMatchingAttributes" signature="(System.Reflection.MemberInfo,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNonVirtual" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RecreateMethodImplAttribute" signature="(System.Reflection.MethodBase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.NoSynchronizationContextScope" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\NoSynchronizationContextScope.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Enter" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.ObjectExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\ObjectExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsSameOrEqualTo" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanConvert" signature="(System.Object,System.Object,System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConvertTo" signature="(System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsNumericType" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEnumType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.PropertyInfoExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\PropertyInfoExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsVirtual" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.Services" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\Services.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="ConfigurationStore" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConfigurationStore" signature="(FluentAssertions.Common.IConfigurationStore)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Configuration" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowException" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowException" signature="(System.Action`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reflector" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reflector" signature="(FluentAssertions.Common.IReflector)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ResetToDefaults" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.StopwatchTimer" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\Clock.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Elapsed" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.StringExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\StringExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IndexOfFirstMismatch" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IndexedSegmentAt" signature="(System.String,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EscapePlaceholders" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UnescapePlaceholders" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Combine" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Capitalize" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IndentLines" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveNewLines" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CountSubstring" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.TaskExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\TaskExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExecuteInDefaultSynchronizationContext" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExecuteInDefaultSynchronizationContext" signature="(System.Func`1&lt;TResult&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Common.TypeExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Common\TypeExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="HasAttribute" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasMatchingAttribute" signature="(System.Reflection.MemberInfo,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasMatchingAttribute" signature="(System.Type,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWith" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWith" signature="(System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWith" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWithOrInherit" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWithOrInherit" signature="(System.Reflection.TypeInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWithOrInherit" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWith" signature="(System.Type,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWith" signature="(System.Reflection.TypeInfo,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWith" signature="(System.Reflection.MemberInfo,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWithOrInherit" signature="(System.Type,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWithOrInherit" signature="(System.Reflection.TypeInfo,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWithOrInherit" signature="(System.Reflection.MemberInfo,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDecoratedWith" signature="(System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.MemberInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Type,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCustomAttributes" signature="(System.Reflection.TypeInfo,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEquivalentTo" signature="(FluentAssertions.Equivalency.SelectedMemberInfo,FluentAssertions.Equivalency.SelectedMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsSameOrInherits" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Implements" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetClosedGenericInterfaces" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OverridesEquals" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindMember" signature="(System.Type,System.String,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindProperty" signature="(System.Type,System.String,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindField" signature="(System.Type,System.String,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNonPrivateMembers" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNonPrivateProperties" signature="(System.Type,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNonPrivateFields" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFieldsFromHierarchy" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPropertiesFromHierarchy" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMembersFromHierarchy" signature="(System.Type,System.Func`2&lt;System.Type,System.Collections.Generic.IEnumerable`1&lt;TMemberInfo&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInterface" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetInterfaces" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPublicProperties" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPublicFields" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasNonPrivateGetter" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCSharpAbstract" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCSharpSealed" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCSharpStatic" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethod" signature="(System.Type,System.String,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasMethod" signature="(System.Type,System.String,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParameterlessMethod" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasParameterlessMethod" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPropertyByName" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasExplicitlyImplementedProperty" signature="(System.Type,System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetIndexerByParameterTypes" signature="(System.Type,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsIndexer" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConstructor" signature="(System.Type,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetImplicitConversionOperator" signature="(System.Type,System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetExplicitConversionOperator" signature="(System.Type,System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetConversionOperators" signature="(System.Type,System.Type,System.Type,System.Func`2&lt;System.String,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasValueSemantics" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsKeyValuePair" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAnonymousType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsTuple" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsAssignableToOpenGeneric" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsImplementationOfOpenGeneric" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsDerivedFromOpenGeneric" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsUnderNamespace" signature="(System.Type,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Disposable" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Disposable.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.AssertionContext`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\AssertionContext.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SubjectProperty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubjectProperty" signature="(FluentAssertions.Equivalency.SelectedMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(TSubject)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expectation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expectation" signature="(TSubject)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Because" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Because" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BecauseArgs" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BecauseArgs" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.SelectedMemberInfo,TSubject,TSubject,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateFromEquivalencyValidationContext" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.AssertionResultSet" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\AssertionResultSet.cs" line-rate="1" branch-rate="1" complexity="5">
          <methods>
            <method name="AddSet" signature="(System.Object,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectClosestMatchFor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetBestResultSets" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ContainsSuccessfulSet" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.AssertionRule`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\AssertionRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;,System.Action`1&lt;FluentAssertions.Equivalency.IAssertionContext`1&lt;TSubject&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertEquality" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.AssertionRuleEquivalencyStep`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\AssertionRuleEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;,System.Action`1&lt;FluentAssertions.Equivalency.IAssertionContext`1&lt;TSubject&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.AssertionRuleEquivalencyStepAdapter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\AssertionRuleEquivalencyStepAdapter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IAssertionRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.CollectionMemberAssertionOptionsDecorator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\CollectionMemberAssertionOptionsDecorator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SelectionRules" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchingRules" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OrderingRules" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConversionSelector" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRecursive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllowInfiniteRecursion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CyclicReferenceHandling" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EnumEquivalencyHandling" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseRuntimeTyping" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludeProperties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludeFields" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceWriter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetUserEquivalencySteps" signature="(FluentAssertions.Equivalency.ConversionSelector)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEqualityStrategy" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.CollectionMemberAssertionRuleDecorator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\CollectionMemberAssertionRuleDecorator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IEquivalencyStep)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateAdjustedCopy" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.CollectionMemberMemberInfo" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\CollectionMemberMemberInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SelectedMemberInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberInfo" signature="(FluentAssertions.Equivalency.SelectedMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberDescription" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompileTimeType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompileTimeType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAdjustedPropertyPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.ConversionSelector" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\ConversionSelector.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="IncludeAll" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Include" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exclude" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequiresConversion" signature="(FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="Clone" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Predicate" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Description" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.CyclicReferenceDetector" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\CyclicReferenceDetector.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.CyclicReferenceHandling)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCyclicReference" signature="(FluentAssertions.Equivalency.ObjectReference,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clone" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.DictionaryEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\DictionaryEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreconditionsAreMet" signature="(System.Collections.IDictionary,System.Collections.IDictionary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertEitherIsNotNull" signature="(System.Collections.IDictionary,System.Collections.IDictionary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertIsDictionary" signature="(System.Collections.IDictionary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertSameLength" signature="(System.Collections.IDictionary,System.Collections.IDictionary)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Digit" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\MultiDimensionalArrayEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name=".ctor" signature="(System.Int32,FluentAssertions.Equivalency.Digit)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetIndices" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Increment" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EnumEqualityStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EnumEqualityStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleByValue" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleByName" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDisplayNameForEnumComparison" signature="(System.Object,System.Nullable`1&lt;System.Decimal&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExtractDecimal" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EnumerableEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EnumerableEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertSubjectIsCollection" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCollection" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToArray" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EnumerableEquivalencyValidator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EnumerableEquivalencyValidator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Recursive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Recursive" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OrderingRules" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OrderingRules" signature="(FluentAssertions.Equivalency.OrderingRuleCollection)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Execute" signature="(System.Object[],T[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertIsNotNull" signature="(System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionsHaveSameCount" signature="(System.Collections.Generic.ICollection`1&lt;System.Object&gt;,System.Collections.Generic.ICollection`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertElementGraphEquivalency" signature="(System.Object[],T[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertElementGraphEquivalencyWithStrictOrdering" signature="(System.Object[],T[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertElementGraphEquivalencyWithLooseOrdering" signature="(System.Object[],T[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LooselyMatchAgainst" signature="(System.Collections.Generic.IList`1&lt;System.Object&gt;,T,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryToMatch" signature="(System.Object,T,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StrictlyMatchAgainst" signature="(System.Object[],T,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EnumerableEquivalencyValidatorExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EnumerableEquivalencyValidatorExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssertEitherCollectionIsNotEmpty" signature="(FluentAssertions.Execution.IAssertionScope,System.Collections.Generic.ICollection`1&lt;System.Object&gt;,System.Collections.Generic.ICollection`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionHasEnoughItems" signature="(FluentAssertions.Execution.IAssertionScope,System.Collections.Generic.ICollection`1&lt;System.Object&gt;,System.Collections.Generic.ICollection`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionHasNotTooManyItems" signature="(FluentAssertions.Execution.IAssertionScope,System.Collections.Generic.ICollection`1&lt;System.Object&gt;,System.Collections.Generic.ICollection`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EquivalencyAssertionOptions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EquivalencyAssertionOptions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EquivalencyAssertionOptions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EquivalencyAssertionOptions.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Excluding" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TExpectation,System.Object&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Including" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TExpectation,System.Object&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Including" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithStrictOrderingFor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TExpectation,System.Object&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AsCollection" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EquivalencyAssertionOptionsExtentions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EquivalencyAssertionOptionsExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GetExpectationType" signature="(FluentAssertions.Equivalency.IEquivalencyAssertionOptions,FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NullableOrActualType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EquivalencyValidationContext" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EquivalencyValidationContext.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="SelectedMemberInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberInfo" signature="(FluentAssertions.Equivalency.SelectedMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberDescription" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expectation" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expectation" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Because" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Because" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BecauseArgs" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BecauseArgs" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRoot" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompileTimeType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompileTimeType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RootIsCollection" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RootIsCollection" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Tracer" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Tracer" signature="(FluentAssertions.Equivalency.ITraceWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="TraceSingle" signature="(FluentAssertions.Equivalency.GetTraceMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceBlock" signature="(FluentAssertions.Equivalency.GetTraceMessage)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EquivalencyValidationContextExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EquivalencyValidationContextExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateForNestedMember" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.SelectedMemberInfo,FluentAssertions.Equivalency.SelectedMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateForCollectionItem" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,System.String,System.Object,T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateForDictionaryItem" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,TKey,System.Object,TExpectation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateWithDifferentSubject" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,System.Object,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.EquivalencyValidator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\EquivalencyValidator.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertEquality" signature="(FluentAssertions.Equivalency.EquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertEqualityUsing" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ShouldCompareMembersThisDeep" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UpdateScopeWithReportableContext" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCyclicReference" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsComplexType" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RunStepsUntilEquivalencyIsProven" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.FieldSelectedMemberInfo" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\FieldSelectedMemberInfo.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="MemberType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.FieldInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetValue" signature="(System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGetAccessModifier" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetSetAccessModifier" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.GenericDictionaryEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\GenericDictionaryEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetIDictionaryInterfaces" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PreconditionsAreMet" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertSubjectIsNotNull" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertExpectationIsNotNull" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertImplementsOnlyOneDictionaryInterface" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertIsCompatiblyTypedDictionary" signature="(System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDictionaryKeyType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertSameLength" signature="(System.Object,System.Type,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDictionaryTypeArguments" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetIDictionaryInterface" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertSameLength" signature="(System.Collections.Generic.IDictionary`2&lt;TSubjectKey,TSubjectValue&gt;,System.Collections.Generic.IDictionary`2&lt;TExpectedKey,TExpectedValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CalculateKeyDifference" signature="(System.Collections.Generic.IDictionary`2&lt;TSubjectKey,TSubjectValue&gt;,System.Collections.Generic.IDictionary`2&lt;TExpectedKey,TExpectedValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertDictionaryEquivalence" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertDictionaryEquivalence" signature="(FluentAssertions.Equivalency.EquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions,System.Collections.Generic.IDictionary`2&lt;TSubjectKey,TSubjectValue&gt;,System.Collections.Generic.IDictionary`2&lt;TExpectedKey,TExpectedValue&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="MissingKeys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AdditionalKeys" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.List`1&lt;TExpectedKey&gt;,System.Collections.Generic.List`1&lt;TSubjectKey&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.GenericEnumerableEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\GenericEnumerableEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleImpl" signature="(FluentAssertions.Equivalency.EnumerableEquivalencyValidator,System.Object[],System.Collections.Generic.IEnumerable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertSubjectIsCollection" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsCollection" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsGenericCollection" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetIEnumerableInterfaces" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeOfEnumeration" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Matching.CollectionMemberMatchingRuleDecorator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Matching\CollectionMemberMatchingRuleDecorator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IMemberMatchingRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(FluentAssertions.Equivalency.SelectedMemberInfo,System.Object,System.String,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Matching.MustMatchByNameRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Matching\MustMatchByNameRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Match" signature="(FluentAssertions.Equivalency.SelectedMemberInfo,System.Object,System.String,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectationImplementsMemberExplicitly" signature="(System.Object,FluentAssertions.Equivalency.SelectedMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Matching.TryMatchByNameRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Matching\TryMatchByNameRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Match" signature="(FluentAssertions.Equivalency.SelectedMemberInfo,System.Object,System.String,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.MemberInfoSelectedMemberInfo" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\MemberInfoSelectedMemberInfo.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DeclaringType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.MemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(FluentAssertions.Equivalency.MemberInfoSelectedMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.MultiDimensionalArrayEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\MultiDimensionalArrayEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildDigitsRepresentingAllIndices" signature="(System.Array)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AreComparable" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,System.Array)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsArray" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveSameDimensions" signature="(System.Object,System.Array)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveSameRank" signature="(System.Object,System.Array)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.ObjectReference" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\ObjectReference.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="IsComplexType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.String,System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Equals" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPathElements" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="IsParentOf" signature="(FluentAssertions.Equivalency.ObjectReference)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetHashCode" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Ordering.ByteArrayOrderingRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Ordering\ByteArrayOrderingRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Evaluate" signature="(FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Ordering.CollectionMemberOrderingRuleDecorator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Ordering\CollectionMemberOrderingRuleDecorator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IOrderingRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Evaluate" signature="(FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Ordering.MatchAllOrderingRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Ordering\MatchAllOrderingRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Evaluate" signature="(FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Ordering.PathBasedOrderingRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Ordering\PathBasedOrderingRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Evaluate" signature="(FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsIndexingQualifiers" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveInitialIndexQualifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Ordering.PredicateBasedOrderingRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Ordering\PredicateBasedOrderingRule.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Invert" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invert" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Evaluate" signature="(FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.OrderingRuleCollection" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\OrderingRuleCollection.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;FluentAssertions.Equivalency.IOrderingRule&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Add" signature="(FluentAssertions.Equivalency.IOrderingRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IsOrderingStrictFor" signature="(FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.PropertySelectedMemberInfo" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\PropertySelectedMemberInfo.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="MemberType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetGetAccessModifier" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetSetAccessModifier" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetValue" signature="(System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.ReferenceEqualityEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\ReferenceEqualityEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.RunAllUserStepsEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\RunAllUserStepsEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.SelectedMemberInfo" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\SelectedMemberInfo.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Create" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Create" signature="(System.Reflection.FieldInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Selection.AllPublicFieldsSelectionRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Selection\AllPublicFieldsSelectionRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IncludesMembers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectMembers" signature="(System.Collections.Generic.IEnumerable`1&lt;FluentAssertions.Equivalency.SelectedMemberInfo&gt;,FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Selection.AllPublicPropertiesSelectionRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Selection\AllPublicPropertiesSelectionRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IncludesMembers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectMembers" signature="(System.Collections.Generic.IEnumerable`1&lt;FluentAssertions.Equivalency.SelectedMemberInfo&gt;,FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Selection.CollectionMemberSelectionRuleDecorator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Selection\CollectionMemberSelectionRuleDecorator.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IncludesMembers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IMemberSelectionRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectMembers" signature="(System.Collections.Generic.IEnumerable`1&lt;FluentAssertions.Equivalency.SelectedMemberInfo&gt;,FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Selection.ExcludeMemberByPathSelectionRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Selection\ExcludeMemberByPathSelectionRule.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Common.MemberPath)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnSelectMembers" signature="(System.Collections.Generic.IEnumerable`1&lt;FluentAssertions.Equivalency.SelectedMemberInfo&gt;,System.String,FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Selection.ExcludeMemberByPredicateSelectionRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Selection\ExcludeMemberByPredicateSelectionRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IncludesMembers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectMembers" signature="(System.Collections.Generic.IEnumerable`1&lt;FluentAssertions.Equivalency.SelectedMemberInfo&gt;,FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Selection.IncludeMemberByPathSelectionRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Selection\IncludeMemberByPathSelectionRule.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="IncludesMembers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Common.MemberPath)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OnSelectMembers" signature="(System.Collections.Generic.IEnumerable`1&lt;FluentAssertions.Equivalency.SelectedMemberInfo&gt;,System.String,FluentAssertions.Equivalency.IMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Selection.IncludeMemberByPredicateSelectionRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Selection\IncludeMemberByPredicateSelectionRule.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="IncludesMembers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectMembers" signature="(System.Collections.Generic.IEnumerable`1&lt;FluentAssertions.Equivalency.SelectedMemberInfo&gt;,FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Selection.NestedSelectionContext" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Selection\NestedSelectionContext.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SelectedMemberInfo" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberInfo" signature="(FluentAssertions.Equivalency.SelectedMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberPath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberPath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectedMemberDescription" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompileTimeType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompileTimeType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RuntimeType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Equivalency.SelectedMemberInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.Selection.SelectMemberByPathSelectionRule" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\Selection\SelectMemberByPathSelectionRule.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IncludesMembers" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SelectMembers" signature="(System.Collections.Generic.IEnumerable`1&lt;FluentAssertions.Equivalency.SelectedMemberInfo&gt;,FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainsIndexingQualifiers" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveInitialIndexQualifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.SelfReferenceEquivalencyAssertionOptions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\SelfReferenceEquivalencyAssertionOptions.cs" line-rate="1" branch-rate="1" complexity="54">
          <methods>
            <method name="ntAssertions.Equivalency.IEquivalencyAssertionOptions.get_MatchingRules" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConversionSelector" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ntAssertions.Equivalency.IEquivalencyAssertionOptions.get_OrderingRules" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ntAssertions.Equivalency.IEquivalencyAssertionOptions.get_IsRecursive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ntAssertions.Equivalency.IEquivalencyAssertionOptions.get_AllowInfiniteRecursion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ntAssertions.Equivalency.IEquivalencyAssertionOptions.get_CyclicReferenceHandling" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ntAssertions.Equivalency.IEquivalencyAssertionOptions.get_EnumEquivalencyHandling" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ntAssertions.Equivalency.IEquivalencyAssertionOptions.get_UseRuntimeTyping" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ntAssertions.Equivalency.IEquivalencyAssertionOptions.get_IncludeProperties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ntAssertions.Equivalency.IEquivalencyAssertionOptions.get_IncludeFields" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceWriter" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TraceWriter" signature="(FluentAssertions.Equivalency.ITraceWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FluentAssertions.Equivalency.IEquivalencyAssertionOptions.GetUserEquivalencySteps" signature="(FluentAssertions.Equivalency.ConversionSelector)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FluentAssertions.Equivalency.IEquivalencyAssertionOptions.GetEqualityStrategy" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludingAllDeclaredProperties" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IncludingAllRuntimeProperties" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IncludingFields" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ExcludingFields" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IncludingProperties" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ExcludingProperties" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RespectingRuntimeTypes" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="RespectingDeclaredTypes" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Excluding" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExcludingMissingMembers" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ThrowingOnMissingMembers" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Using" signature="(System.Action`1&lt;FluentAssertions.Equivalency.IAssertionContext`1&lt;TProperty&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IncludingNestedObjects" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ExcludingNestedObjects" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="IgnoringCyclicReferences" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AllowingInfiniteRecursion" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WithoutSelectionRules" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WithoutMatchingRules" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Using" signature="(FluentAssertions.Equivalency.IMemberSelectionRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(FluentAssertions.Equivalency.IMemberMatchingRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(FluentAssertions.Equivalency.IAssertionRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Using" signature="(FluentAssertions.Equivalency.IEquivalencyStep)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithStrictOrdering" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WithStrictOrderingFor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithoutStrictOrdering" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WithoutStrictOrderingFor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ComparingEnumsByName" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ComparingEnumsByValue" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ComparingByMembers" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ComparingByValue" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="WithTracing" signature="(FluentAssertions.Equivalency.ITraceWriter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithAutoConversion" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WithAutoConversionFor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithoutAutoConversionFor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="13">
              <lines />
            </method>
            <method name="RemoveSelectionRule" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ClearMatchingRules" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AddSelectionRule" signature="(FluentAssertions.Equivalency.IMemberSelectionRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddMatchingRule" signature="(FluentAssertions.Equivalency.IMemberMatchingRule)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddEquivalencyStep" signature="(FluentAssertions.Equivalency.IEquivalencyStep)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TSelf,System.Action`1&lt;FluentAssertions.Equivalency.IAssertionContext`1&lt;TMember&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WhenTypeIs" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="When" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;FluentAssertions.Equivalency.IMemberInfo,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FluentAssertions-Equivalency-IEquivalencyAssertionOptions-get_SelectionRules" signature="()" line-rate="1" branch-rate="1" complexity="11">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.SimpleEqualityEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\SimpleEqualityEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.StringBuilderTraceWriter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Tracing\StringBuilderTraceWriter.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="AddSingle" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddBlock" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WriteLine" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.StringEqualityEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\StringEqualityEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAgainstNulls" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAgainstType" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSubjectDescription" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.StructuralEqualityEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\StructuralEqualityEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertMemberEquality" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.SelectedMemberInfo,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FindMatchFor" signature="(FluentAssertions.Equivalency.SelectedMemberInfo,FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetSelectedMembers" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.SubjectInfoExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\SubjectInfoExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="WhichSetterHas" signature="(FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Common.CSharpAccessModifier)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WhichSetterDoesNotHave" signature="(FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Common.CSharpAccessModifier)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WhichGetterHas" signature="(FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Common.CSharpAccessModifier)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WhichGetterDoesNotHave" signature="(FluentAssertions.Equivalency.IMemberInfo,FluentAssertions.Common.CSharpAccessModifier)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.TryConversionStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\TryConversionStep.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Equivalency.ConversionSelector)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryChangeType" signature="(System.Object,System.Type,System.Object&amp;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Equivalency.ValueTypeEquivalencyStep" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Equivalency\ValueTypeEquivalencyStep.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Handle" signature="(FluentAssertions.Equivalency.IEquivalencyValidationContext,FluentAssertions.Equivalency.IEquivalencyValidator,FluentAssertions.Equivalency.IEquivalencyAssertionOptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.EquivalencyStepCollection" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\EquivalencyStepCollection.cs" line-rate="1" branch-rate="1" complexity="16">
          <methods>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Add" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AddAfter" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Insert" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="InsertBefore" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Remove" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetDefaultSteps" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.EventRaisingExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\EventRaisingExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="WithSender" signature="(FluentAssertions.Events.IEventRecorder,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithArgs" signature="(FluentAssertions.Events.IEventRecorder,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithArgs" signature="(FluentAssertions.Events.IEventRecorder,System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Events.EventAssertions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Events\EventAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Events.IMonitor`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Raise" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotRaise" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RaisePropertyChangeFor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Object&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotRaisePropertyChangeFor" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Object&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAffectedPropertyName" signature="(FluentAssertions.Events.RecordedEvent)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Events.EventHandlerFactory" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Events\EventHandlerFactory.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="GenerateHandler" signature="(System.Type,FluentAssertions.Events.IEventRecorder)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDelegateReturnType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDelegateParameterTypes" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AppendParameterListThisReference" signature="(System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TypeIsDelegate" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DelegateInvokeMethod" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Events.EventMetadata" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Events\IMonitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="EventName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandlerType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Events.EventMonitor`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Events\EventMonitor.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MonitoredEvents" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="OccurredEvents" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.Func`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="Should" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Attach" signature="(System.Type,System.Func`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPublicEvents" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="AttachEventHandler" signature="(System.Reflection.EventInfo,System.Func`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEventRecorder" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Events.EventRecorder" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Events\EventRecorder.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="EventObject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EventObject" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EventName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EventHandlerType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EventHandlerType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object,System.String,System.Func`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attach" signature="(System.WeakReference,System.Reflection.EventInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="RecordEvent" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reset" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Events.OccurredEvent" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Events\IMonitor.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="EventName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EventName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parameters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parameters" signature="(System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TimestampUtc" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TimestampUtc" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Events.RecordedEvent" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Events\RecordedEvent.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TimestampUtc" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TimestampUtc" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parameters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Parameters" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.DateTime,System.Object,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Exactly" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Exactly.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Once" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Twice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Thrice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Times" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assert" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.AssertionFailedException" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\AssertionFailedException.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.AssertionScope" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\AssertionScope.cs" line-rate="1" branch-rate="1" complexity="13">
          <methods>
            <method name="Context" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Context" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Current" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Current" signature="(FluentAssertions.Execution.AssertionScope)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UsingLineBreaks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Succeeded" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ntAssertions.Execution.IAssertionScope.get_UsingLineBreaks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Execution.IAssertionStrategy,FluentAssertions.Execution.AssertionScope)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Execution.IAssertionStrategy)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BecauseOf" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithExpectation" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TrackComparands" signature="(System.Object,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClearExpectation" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="Given" signature="(System.Func`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForCondition" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailWith" signature="(System.Func`1&lt;FluentAssertions.Execution.FailReason&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailWithPreFormatted" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailWith" signature="(System.Func`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetIdentifier" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="AddPreFormattedFailure" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddNonReportable" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddReportable" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Discard" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="HasFailures" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Get" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="WithDefaultIdentifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetCurrentAssertionScope" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="SetCurrentAssertionScope" signature="(FluentAssertions.Execution.AssertionScope)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FluentAssertions.Execution.IAssertionScope.ForCondition" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FluentAssertions.Execution.IAssertionScope.BecauseOf" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FluentAssertions.Execution.IAssertionScope.WithExpectation" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FluentAssertions.Execution.IAssertionScope.WithDefaultIdentifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.CollectingAssertionStrategy" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\CollectingAssertionStrategy.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="FailureMessages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscardFailures" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ThrowIfAny" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleFailure" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.ContextDataItems" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\ContextDataItems.cs" line-rate="1" branch-rate="1" complexity="7">
          <methods>
            <method name="GetReportable" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="AsStringOrDefault" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(FluentAssertions.Execution.ContextDataItems)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(FluentAssertions.Execution.ContextDataItems/DataItem)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Get" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Key" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reportable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RequiresFormatting" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object,System.Boolean,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clone" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.Continuation" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\Continuation.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Then" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SourceSucceeded" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Execution.AssertionScope,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(FluentAssertions.Execution.Continuation)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.ContinuationOfGiven`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\ContinuationOfGiven.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Then" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Execution.GivenSelector`1&lt;TSubject&gt;,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="op_Implicit" signature="(FluentAssertions.Execution.ContinuationOfGiven`1&lt;TSubject&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.ContinuedAssertionScope" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\ContinuedAssertionScope.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="UsingLineBreaks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Succeeded" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Execution.AssertionScope,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Given" signature="(System.Func`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForCondition" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailWith" signature="(System.Func`1&lt;FluentAssertions.Execution.FailReason&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BecauseOf" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClearExpectation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="WithExpectation" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithDefaultIdentifier" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Discard" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Dispose" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.DefaultAssertionStrategy" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\DefaultAssertionStrategy.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="FailureMessages" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleFailure" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DiscardFailures" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ThrowIfAny" signature="(System.Collections.Generic.IDictionary`2&lt;System.String,System.Object&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.Execute" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\Execute.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Assertion" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.FailReason" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\FailReason.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Message" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Args" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.FallbackTestFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\FallbackTestFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsAvailable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throw" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.GallioTestFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\GallioTestFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsAvailable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throw" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.GivenSelector`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\GivenSelector.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name=".ctor" signature="(System.Func`1&lt;T&gt;,System.Boolean,FluentAssertions.Execution.AssertionScope)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForCondition" signature="(System.Func`2&lt;T,System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Given" signature="(System.Func`2&lt;T,TOut&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailWith" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailWith" signature="(System.String,System.Func`2&lt;T,System.Object&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ClearExpectation" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.GivenSelectorExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\GivenSelectorExtensions.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="AssertCollectionIsNotNull" signature="(FluentAssertions.Execution.GivenSelector`1&lt;System.Collections.Generic.IEnumerable`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertEitherCollectionIsNotEmpty" signature="(FluentAssertions.Execution.GivenSelector`1&lt;System.Collections.Generic.ICollection`1&lt;T&gt;&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionHasEnoughItems" signature="(FluentAssertions.Execution.GivenSelector`1&lt;System.Collections.Generic.IEnumerable`1&lt;T&gt;&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionHasEnoughItems" signature="(FluentAssertions.Execution.GivenSelector`1&lt;System.Collections.Generic.ICollection`1&lt;T&gt;&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionHasNotTooManyItems" signature="(FluentAssertions.Execution.GivenSelector`1&lt;System.Collections.Generic.ICollection`1&lt;T&gt;&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionsHaveSameCount" signature="(FluentAssertions.Execution.GivenSelector`1&lt;System.Collections.Generic.ICollection`1&lt;T&gt;&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertCollectionsHaveSameItems" signature="(FluentAssertions.Execution.GivenSelector`1&lt;System.Collections.Generic.ICollection`1&lt;TActual&gt;&gt;,System.Collections.Generic.ICollection`1&lt;TExpected&gt;,System.Func`3&lt;System.Collections.Generic.ICollection`1&lt;TActual&gt;,System.Collections.Generic.ICollection`1&lt;TExpected&gt;,System.Int32&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Items" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Index" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Count" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsReadOnly" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.ICollection`1&lt;T&gt;,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Add" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clear" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Contains" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CopyTo" signature="(T[],System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Remove" signature="(T)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.LateBoundTestFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\LateBoundTestFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsAvailable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throw" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.MbUnitTestFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\MbUnitTestFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionFullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.MessageBuilder" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\MessageBuilder.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Build" signature="(System.String,System.Object[],System.String,FluentAssertions.Execution.ContextDataItems,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubstituteIdentifier" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubstituteContextualTags" signature="(System.String,FluentAssertions.Execution.ContextDataItems)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatArgumentPlaceholders" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SanitizeReason" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EnsurePrefix" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExtractLeadingBlanksFrom" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartsWithBlank" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.MSpecFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\MSpecFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionFullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.MSTestFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\MSTestFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionFullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.MSTestFrameworkV2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\MSTestFrameworkV2.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExceptionFullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.NSpec1Framework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\NSpec1Framework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsAvailable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throw" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.NSpecFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\NSpecFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsAvailable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throw" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.NUnitTestFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\NUnitTestFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionFullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.TestFrameworkProvider" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\TestFrameworkProvider.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="Throw" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DetectFramework" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="AttemptToDetectUsingAppSetting" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="AttemptToDetectUsingDynamicScanning" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.XUnit2TestFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\XUnit2TestFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="IsAvailable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throw" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Execution.XUnitTestFramework" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Execution\XUnitTestFramework.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="AssemblyName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExceptionFullName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Extensions.FluentDateTimeExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Extensions\FluentDateTimeExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="January" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="February" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="March" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="April" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="May" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="June" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="July" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="August" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="September" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="October" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="November" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="December" signature="(System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="At" signature="(System.DateTime,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="At" signature="(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="At" signature="(System.DateTimeOffset,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AsUtc" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AsLocal" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Before" signature="(System.TimeSpan,System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="After" signature="(System.TimeSpan,System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Nanosecond" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Nanosecond" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddNanoseconds" signature="(System.DateTime,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddNanoseconds" signature="(System.DateTimeOffset,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microsecond" signature="(System.DateTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microsecond" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddMicroseconds" signature="(System.DateTime,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddMicroseconds" signature="(System.DateTimeOffset,System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Extensions.FluentTimeSpanExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Extensions\FluentTimeSpanExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Ticks" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Ticks" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Nanoseconds" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Nanoseconds" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Nanoseconds" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TotalNanoseconds" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microseconds" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microseconds" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Microseconds" signature="(System.Int64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TotalMicroseconds" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Milliseconds" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Milliseconds" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seconds" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seconds" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Seconds" signature="(System.Int32,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Minutes" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Minutes" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Minutes" signature="(System.Int32,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Hours" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Hours" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Hours" signature="(System.Int32,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Days" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Days" signature="(System.Double)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Days" signature="(System.Int32,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="And" signature="(System.TimeSpan,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.FluentActions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\FluentActions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Invoking" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Invoking" signature="(System.Func`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Awaiting" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Awaiting" signature="(System.Func`1&lt;System.Threading.Tasks.Task`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Enumerating" signature="(System.Func`1&lt;System.Collections.IEnumerable&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Enumerating" signature="(System.Func`1&lt;System.Collections.Generic.IEnumerable`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.AggregateExceptionValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\AggregateExceptionValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.AttributeBasedFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\AttributeBasedFormatter.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="IsScanningEnabled" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Formatters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFormatter" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HandleValueFormatterDetectionModeChanges" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="FindCustomFormatters" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="Applicable" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.ByteValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\ByteValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.DateTimeOffsetValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\DateTimeOffsetValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasTime" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasDate" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasMilliSeconds" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasMicroSeconds" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasNanoSeconds" signature="(System.DateTimeOffset)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.DecimalValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\DecimalValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.DefaultValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\DefaultValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HasDefaultToStringImplementation" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetTypeAndPublicPropertyValues" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPropertyValueTextFor" signature="(System.Object,FluentAssertions.Equivalency.SelectedMemberInfo,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateWhitespaceForLevel" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.DoubleValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\DoubleValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.EnumerableValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\EnumerableValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.ExceptionValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\ExceptionValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.ExpressionValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\ExpressionValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.Formatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\Formatter.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Formatters" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToString" signature="(System.Object,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatChild" signature="(System.String,System.Object,System.Boolean,FluentAssertions.Formatting.Formatter/ObjectGraph)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="RemoveFormatter" signature="(FluentAssertions.Formatting.IValueFormatter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddFormatter" signature="(FluentAssertions.Formatting.IValueFormatter)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Depth" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TryPush" signature="(System.String,System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFullPath" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Pop" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ToString" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.FormattingContext" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\IValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Depth" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Depth" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseLineBreaks" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseLineBreaks" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.GuidValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\GuidValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.Int16ValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\Int16ValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.Int32ValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\Int32ValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.Int64ValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\Int64ValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.MultidimensionalArrayFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\MultidimensionalArrayFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsFirstIteration" signature="(System.Array,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsInnerMostLoop" signature="(System.Array,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsLastIteration" signature="(System.Array,System.Int32,System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.NullValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\NullValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.PropertyInfoFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\PropertyInfoFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.SByteValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\SByteValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.SingleValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\SingleValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.StringValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\StringValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.TaskFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\TaskFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.TimeSpanValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\TimeSpanValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetNonZeroFragments" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddMicrosecondsIfNotZero" signature="(System.TimeSpan,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddSecondsIfNotZero" signature="(System.TimeSpan,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddMinutesIfNotZero" signature="(System.TimeSpan,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddHoursIfNotZero" signature="(System.TimeSpan,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AddDaysIfNotZero" signature="(System.TimeSpan,System.Collections.Generic.List`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="JoinUsingWritingStyle" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AllButLastFragment" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.UInt16ValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\UInt16ValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.UInt32ValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\UInt32ValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.UInt64ValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\UInt64ValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.XAttributeValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\XAttributeValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.XDocumentValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\XDocumentValueFormatter.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatDocumentWithoutRoot" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Formatting.XElementValueFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Formatting\XElementValueFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatElementWithoutChildren" signature="(System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatElementWithChildren" signature="(System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SplitIntoSeparateLines" signature="(System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.LessThan" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\LessThan.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="Twice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Thrice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Times" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assert" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.MoreThan" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\MoreThan.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="Once" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Twice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Thrice" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Times" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Mode" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Assert" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Numeric.ComparableTypeAssertions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Numeric\ComparableTypeAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.IComparable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(TExpectation,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(TExpectation,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessThan" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessOrEqualTo" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeGreaterThan" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeGreaterOrEqualTo" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInRange" signature="(T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInRange" signature="(T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Numeric.NullableNumericAssertions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Numeric\NullableNumericAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Nullable`1&lt;T&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;System.Nullable`1&lt;T&gt;,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Numeric.NumericAssertions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Numeric\NumericAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(System.IComparable)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Nullable`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Nullable`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BePositive" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNegative" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessThan" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessOrEqualTo" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeGreaterThan" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeGreaterOrEqualTo" signature="(T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeInRange" signature="(T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeInRange" signature="(T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(T[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.Collections.Generic.IEnumerable`1&lt;T&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOfType" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeOfType" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.NumericAssertionsExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\NumericAssertionsExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="BeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.SByte&gt;,System.SByte,System.Byte,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Byte&gt;,System.Byte,System.Byte,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Int16&gt;,System.Int16,System.UInt16,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.UInt16&gt;,System.UInt16,System.UInt16,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Int32&gt;,System.Int32,System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.UInt32&gt;,System.UInt32,System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Int64&gt;,System.Int64,System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.UInt64&gt;,System.UInt64,System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailIfValueOutsideBounds" signature="(System.Boolean,TValue,TDelta,TValue,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.SByte&gt;,System.SByte,System.Byte,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Byte&gt;,System.Byte,System.Byte,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Int16&gt;,System.Int16,System.UInt16,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.UInt16&gt;,System.UInt16,System.UInt16,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Int32&gt;,System.Int32,System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.UInt32&gt;,System.UInt32,System.UInt32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Int64&gt;,System.Int64,System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.UInt64&gt;,System.UInt64,System.UInt64,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailIfValueInsideBounds" signature="(System.Boolean,TValue,TDelta,TValue,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Single&gt;,System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Single&gt;,System.Nullable`1&lt;System.Single&gt;,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeApproximately" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Single&gt;,System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Double&gt;,System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Double&gt;,System.Nullable`1&lt;System.Double&gt;,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeApproximately" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Double&gt;,System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Decimal&gt;,System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Decimal&gt;,System.Nullable`1&lt;System.Decimal&gt;,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeApproximately" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Decimal&gt;,System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailIfDifferenceOutsidePrecision" signature="(System.Boolean,FluentAssertions.Numeric.NumericAssertions`1&lt;T&gt;,T,T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Single&gt;,System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Single&gt;,System.Nullable`1&lt;System.Single&gt;,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeApproximately" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Single&gt;,System.Single,System.Single,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Double&gt;,System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Double&gt;,System.Nullable`1&lt;System.Double&gt;,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeApproximately" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Double&gt;,System.Double,System.Double,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Decimal&gt;,System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeApproximately" signature="(FluentAssertions.Numeric.NullableNumericAssertions`1&lt;System.Decimal&gt;,System.Nullable`1&lt;System.Decimal&gt;,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeApproximately" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;System.Decimal&gt;,System.Decimal,System.Decimal,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FailIfDifferenceWithinPrecision" signature="(FluentAssertions.Numeric.NumericAssertions`1&lt;T&gt;,System.Boolean,T,T,T,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMinValue" signature="(System.Int64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMaxValue" signature="(System.Int64,System.UInt64)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.ObjectAssertionsExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\ObjectAssertionsExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="BeBinarySerializable" signature="(FluentAssertions.Primitives.ObjectAssertions,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeBinarySerializable" signature="(FluentAssertions.Primitives.ObjectAssertions,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;T&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;T&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDataContractSerializable" signature="(FluentAssertions.Primitives.ObjectAssertions,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDataContractSerializable" signature="(FluentAssertions.Primitives.ObjectAssertions,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;T&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;T&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateCloneUsingBinarySerializer" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateCloneUsingDataContractSerializer" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeXmlSerializable" signature="(FluentAssertions.Primitives.ObjectAssertions,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateCloneUsingXmlSerializer" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BindToType" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.OccurrenceConstraint" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\OccurrenceConstraint.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ExpectedCount" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ExpectedCount" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.BooleanAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\BooleanAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeFalse" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeTrue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Boolean,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.DateTimeAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\DateTimeAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(System.Nullable`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(System.DateTime,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(System.DateTime,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(System.DateTime,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(System.DateTime,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeBefore" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeBefore" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOnOrBefore" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeOnOrBefore" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAfter" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAfter" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOnOrAfter" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeOnOrAfter" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveYear" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveYear" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveMonth" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveMonth" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveDay" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveDay" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveHour" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveHour" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveMinute" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveMinute" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveSecond" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveSecond" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeMoreThan" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAtLeast" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeExactly" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeWithin" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessThan" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeSameDateAs" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeSameDateAs" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.Nullable`1&lt;System.DateTime&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.DateTime[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.Collections.Generic.IEnumerable`1&lt;System.DateTime&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.DateTime&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeIn" signature="(System.DateTimeKind,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.DateTimeOffsetAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\DateTimeOffsetAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(System.Nullable`1&lt;System.DateTimeOffset&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.DateTimeOffset&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(System.DateTimeOffset,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(System.DateTimeOffset,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(System.DateTimeOffset,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(System.DateTimeOffset,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeBefore" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeBefore" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOnOrBefore" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeOnOrBefore" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAfter" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAfter" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOnOrAfter" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeOnOrAfter" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveYear" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveYear" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveMonth" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveMonth" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveDay" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveDay" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveHour" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveHour" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveMinute" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveMinute" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveSecond" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveSecond" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveOffset" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveOffset" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeMoreThan" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAtLeast" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeExactly" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeWithin" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessThan" signature="(System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeSameDateAs" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeSameDateAs" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.Nullable`1&lt;System.DateTimeOffset&gt;[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.DateTimeOffset[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.Collections.Generic.IEnumerable`1&lt;System.DateTimeOffset&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Nullable`1&lt;System.DateTimeOffset&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.DateTimeOffsetRangeAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\DateTimeOffsetRangeAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Primitives.DateTimeOffsetAssertions,System.Nullable`1&lt;System.DateTimeOffset&gt;,FluentAssertions.Primitives.TimeSpanCondition,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Before" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="After" signature="(System.DateTimeOffset,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.DateTimeRangeAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\DateTimeRangeAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Primitives.DateTimeAssertions,System.Nullable`1&lt;System.DateTime&gt;,FluentAssertions.Primitives.TimeSpanCondition,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Before" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="After" signature="(System.DateTime,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.GuidAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\GuidAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(System.Nullable`1&lt;System.Guid&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.Guid&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Guid,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Guid,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.NegatedStringStartValidator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\NegatedStringStartValidator.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="ExpectationDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.StringComparison,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAgainstMismatch" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.NullableBooleanAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\NullableBooleanAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.Boolean&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Nullable`1&lt;System.Boolean&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeFalse" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeTrue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.NullableDateTimeAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\NullableDateTimeAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.DateTime&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Nullable`1&lt;System.DateTime&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.NullableDateTimeOffsetAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\NullableDateTimeOffsetAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.DateTimeOffset&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Nullable`1&lt;System.DateTimeOffset&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.NullableGuidAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\NullableGuidAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.Guid&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Nullable`1&lt;System.Guid&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.NullableSimpleTimeSpanAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\NullableSimpleTimeSpanAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.TimeSpan&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveValue" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Nullable`1&lt;System.TimeSpan&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.ObjectAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\ObjectAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Object,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(TExpectation,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(TExpectation,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(TExpectation,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(TExpectation,System.Func`2&lt;FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;,FluentAssertions.Equivalency.EquivalencyAssertionOptions`1&lt;TExpectation&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveFlag" signature="(System.Enum,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveFlag" signature="(System.Enum,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.ReferenceTypeAssertions`2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\ReferenceTypeAssertions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(TSubject)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(TSubject)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNull" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeSameAs" signature="(TSubject,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeSameAs" signature="(TSubject,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOfType" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOfType" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeOfType" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeOfType" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAssignableTo" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAssignableTo" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAssignableTo" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAssignableTo" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TSubject,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;T,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.SimpleTimeSpanAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\SimpleTimeSpanAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(System.Nullable`1&lt;System.TimeSpan&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Nullable`1&lt;System.TimeSpan&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BePositive" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNegative" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessThan" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessOrEqualTo" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeGreaterThan" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeGreaterOrEqualTo" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(System.TimeSpan,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(System.TimeSpan,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(System.TimeSpan,System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeCloseTo" signature="(System.TimeSpan,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.StringAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\StringAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeOneOf" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Match" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotMatch" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchEquivalentOf" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotMatchEquivalentOf" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="MatchRegex" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotMatchRegex" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartWith" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotStartWith" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="StartWithEquivalent" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotStartWithEquivalentOf" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndWith" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEndWith" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="EndWithEquivalent" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotEndWithEquivalentOf" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contain" signature="(System.String,FluentAssertions.OccurrenceConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainEquivalentOf" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainEquivalentOf" signature="(System.String,FluentAssertions.OccurrenceConstraint,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainAll" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainAll" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainAny" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ContainAny" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContain" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainAll" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainAll" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainAny" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainAny" signature="(System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotContainEquivalentOf" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contains" signature="(System.String,System.String,System.StringComparison)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveLength" signature="(System.Int32,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNullOrEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNullOrEmpty" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeNullOrWhiteSpace" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeNullOrWhiteSpace" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowIfValuesNullOrEmpty" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.StringEqualityValidator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\StringEqualityValidator.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="ExpectationDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.StringComparison,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAgainstSuperfluousWhitespace" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ValidateAgainstLengthDifferences" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetMismatchSegmentForStringsOfDifferentLengths" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ValidateAgainstMismatch" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.StringStartValidator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\StringStartValidator.cs" line-rate="1" branch-rate="1" complexity="3">
          <methods>
            <method name="ExpectationDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.StringComparison,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAgainstLengthDifferences" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ValidateAgainstMismatch" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.StringValidator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\StringValidator.cs" line-rate="1" branch-rate="1" complexity="12">
          <methods>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Validate" signature="()" line-rate="1" branch-rate="1" complexity="8">
              <lines />
            </method>
            <method name="ValidateAgainstNulls" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="IsLongOrMultiline" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAgainstSuperfluousWhitespace" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ValidateAgainstLengthDifferences" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.StringWildcardMatchingValidator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\StringWildcardMatchingValidator.cs" line-rate="1" branch-rate="1" complexity="8">
          <methods>
            <method name="ExpectationDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negate" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Negate" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreCase" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreNewLineDifferences" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IgnoreNewLineDifferences" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAgainstMismatch" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="IsMatch" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ConvertWildcardToRegEx" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CleanNewLines" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Primitives.TimeSpanPredicate" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Primitives\TimeSpanPredicate.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="DisplayText" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`3&lt;System.TimeSpan,System.TimeSpan,System.Boolean&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsMatchedBy" signature="(System.TimeSpan,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Reflection.AssemblyAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\AssemblyAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotReference" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotReference" signature="(System.Reflection.Assembly,System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reference" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Reference" signature="(System.Reflection.Assembly,System.String,System.String[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="DefineType" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.ActionAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\ActionAssertions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action,FluentAssertions.Specialized.IExtractExceptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action,FluentAssertions.Specialized.IExtractExceptions,FluentAssertions.Common.IClock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeSubject" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.AsyncFunctionAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\AsyncFunctionAssertions.cs" line-rate="1" branch-rate="1" complexity="28">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanHandleAsync" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;,FluentAssertions.Specialized.IExtractExceptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;,FluentAssertions.Specialized.IExtractExceptions,FluentAssertions.Common.IClock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeSubject" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NotThrowAfterAsync" signature="(System.TimeSpan,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowExactlyAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ThrowAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="NotThrowAsync" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="NotThrowAsync" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
            <method name="&gt;c__DisplayClass14_0/&lt;&lt;NotThrowAfterAsync" signature="()" line-rate="1" branch-rate="1" complexity="10">
              <lines />
            </method>
            <method name="InvokeWithInterceptionAsync" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.DelegateAssertions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\DelegateAssertions.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Clock" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CanHandleAsync" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TDelegate,FluentAssertions.Specialized.IExtractExceptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TDelegate,FluentAssertions.Specialized.IExtractExceptions,FluentAssertions.Common.IClock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throw" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotThrow" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotThrow" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThrowExactly" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotThrowAfter" signature="(System.TimeSpan,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Throw" signature="(System.Exception,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotThrow" signature="(System.Exception,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotThrow" signature="(System.Exception,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeSubjectWithInterception" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="FailIfSubjectIsAsyncVoid" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.ExceptionAssertions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\ExceptionAssertions.cs" line-rate="1" branch-rate="1" complexity="2">
          <methods>
            <method name="And" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Which" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SingleSubject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithMessage" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithInnerException" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="WithInnerExceptionExactly" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Where" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TException,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BuildExceptionsString" signature="(System.Collections.Generic.IEnumerable`1&lt;TException&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".cctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Context" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Context" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="Execute" signature="(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.ExecutionTime" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\ExecutionTimeAssertions.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="ElapsedTime" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRunning" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsRunning" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ActionDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Task" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exception" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Exception" signature="(System.Exception)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Action,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="&gt;c__DisplayClass3_0/&lt;&lt;-ctor" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.ExecutionTimeAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\ExecutionTimeAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(FluentAssertions.Specialized.ExecutionTime)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="PollUntil" signature="(System.Func`2&lt;System.TimeSpan,System.Boolean&gt;,System.Boolean,System.TimeSpan)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessOrEqualTo" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeLessThan" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeGreaterOrEqualTo" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeGreaterThan" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeCloseTo" signature="(System.TimeSpan,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.FunctionAssertions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\FunctionAssertions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;T&gt;,FluentAssertions.Specialized.IExtractExceptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;T&gt;,FluentAssertions.Specialized.IExtractExceptions,FluentAssertions.Common.IClock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="InvokeSubject" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="NotThrow" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotThrowAfter" signature="(System.TimeSpan,System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.GenericAsyncFunctionAssertions`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\GenericAsyncFunctionAssertions.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,FluentAssertions.Specialized.IExtractExceptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task`1&lt;TResult&gt;&gt;,FluentAssertions.Specialized.IExtractExceptions,FluentAssertions.Common.IClock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompleteWithin" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompleteWithinAsync" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.MemberExecutionTime`1" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\ExecutionTimeAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(T,System.Linq.Expressions.Expression`1&lt;System.Action`1&lt;T&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Specialized.NonGenericAsyncFunctionAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Specialized\NonGenericAsyncFunctionAssertions.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;,FluentAssertions.Specialized.IExtractExceptions)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Func`1&lt;System.Threading.Tasks.Task&gt;,FluentAssertions.Specialized.IExtractExceptions,FluentAssertions.Common.IClock)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompleteWithin" signature="(System.TimeSpan,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CompleteWithinAsync" signature="()" line-rate="1" branch-rate="1" complexity="9">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.TypeEnumerableExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\TypeEnumerableExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ThatAreDecoratedWith" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatAreDecoratedWithOrInherit" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatAreNotDecoratedWith" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatAreNotDecoratedWithOrInherit" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatAreInNamespace" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatAreUnderNamespace" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatDeriveFrom" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatImplement" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.TypeExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\TypeExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Types" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Types" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Types" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Methods" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Methods" signature="(FluentAssertions.Types.TypeSelector)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Properties" signature="(FluentAssertions.Types.TypeSelector)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.AllTypes" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\AllTypes.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="From" signature="(System.Reflection.Assembly)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.ConstructorInfoAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\ConstructorInfoAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SubjectDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.ConstructorInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDescriptionFor" signature="(System.Reflection.ConstructorInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.MemberInfoAssertions`2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\MemberInfoAssertions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubjectDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(TSubject)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWith" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWith" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.MethodBaseAssertions`2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\MethodBaseAssertions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(TSubject)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAccessModifier" signature="(FluentAssertions.Common.CSharpAccessModifier,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveAccessModifier" signature="(FluentAssertions.Common.CSharpAccessModifier,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParameterString" signature="(System.Reflection.MethodBase)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.MethodInfoAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\MethodInfoAssertions.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="SubjectDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeVirtual" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeVirtual" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAsync" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAsync" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ReturnVoid" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Return" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Return" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotReturnVoid" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotReturn" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotReturn" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDescriptionFor" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.MethodInfoSelector" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\MethodInfoSelector.cs" line-rate="1" branch-rate="1" complexity="15">
          <methods>
            <method name="ThatArePublicOrInternal" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatReturnVoid" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatDoNotReturnVoid" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatReturn" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatDoNotReturn" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreDecoratedWith" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreDecoratedWithOrInherit" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreNotDecoratedWith" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreNotDecoratedWithOrInherit" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToArray" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="HasSpecialName" signature="(System.Reflection.MethodInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.MethodInfoSelectorAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\MethodInfoSelectorAssertions.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="SubjectMethods" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubjectMethods" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MethodInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Context" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.MethodInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeVirtual" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeVirtual" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAllNonVirtualMethodsFromSelection" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetAllVirtualMethodsFromSelection" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="BeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWith" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWith" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodsWithout" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetMethodsWith" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDescriptionsFor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.MethodInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.PropertyInfoAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\PropertyInfoAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="SubjectDescription" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeVirtual" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeVirtual" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeWritable" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeWritable" signature="(FluentAssertions.Common.CSharpAccessModifier,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeWritable" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeReadable" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeReadable" signature="(FluentAssertions.Common.CSharpAccessModifier,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeReadable" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Return" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Return" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotReturn" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotReturn" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDescriptionFor" signature="(System.Reflection.PropertyInfo)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.PropertyInfoSelector" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\PropertyInfoSelector.cs" line-rate="1" branch-rate="1" complexity="15">
          <methods>
            <method name="ThatArePublicOrInternal" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatAreDecoratedWith" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreDecoratedWithOrInherit" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreNotDecoratedWith" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreNotDecoratedWithOrInherit" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="OfType" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="NotOfType" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ToArray" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.PropertyInfoSelectorAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\PropertyInfoSelectorAssertions.cs" line-rate="1" branch-rate="1" complexity="10">
          <methods>
            <method name="SubjectProperties" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="SubjectProperties" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.PropertyInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Context" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Reflection.PropertyInfo[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeVirtual" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeVirtual" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeWritable" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetAllReadOnlyPropertiesFromSelection" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetAllNonVirtualPropertiesFromSelection" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetAllVirtualPropertiesFromSelection" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="BeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPropertiesWithout" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetPropertiesWith" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetDescriptionsFor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Reflection.PropertyInfo&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.TypeAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\TypeAssertions.cs" line-rate="1" branch-rate="1" complexity="4">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAssignableTo" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAssignableTo" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAssignableTo" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAssignableTo" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetFailureMessageIfTypesAreDifferent" signature="(System.Type,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWith" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWithOrInherit" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWithOrInherit" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWith" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWithOrInherit" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWithOrInherit" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Implement" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Implement" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotImplement" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotImplement" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDerivedFrom" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDerivedFrom" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDerivedFrom" signature="(System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDerivedFrom" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeSealed" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeSealed" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeAbstract" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeAbstract" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeStatic" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeStatic" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveProperty" signature="(System.Type,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveProperty" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveProperty" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveExplicitProperty" signature="(System.Type,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveExplicitProperty" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveExplicitProperty" signature="(System.Type,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveExplicitProperty" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveExplicitMethod" signature="(System.Type,System.String,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveExplicitMethod" signature="(System.String,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveExplicitMethod" signature="(System.Type,System.String,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveExplicitMethod" signature="(System.String,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveIndexer" signature="(System.Type,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveIndexer" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveMethod" signature="(System.String,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveMethod" signature="(System.String,System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveConstructor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveDefaultConstructor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveConstructor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveDefaultConstructor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetParameterString" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAccessModifier" signature="(FluentAssertions.Common.CSharpAccessModifier,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveAccessModifier" signature="(FluentAssertions.Common.CSharpAccessModifier,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveImplictConversionOperator" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveImplicitConversionOperator" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveImplictConversionOperator" signature="(System.Type,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveImplicitConversionOperator" signature="(System.Type,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveImplictConversionOperator" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveImplicitConversionOperator" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveImplictConversionOperator" signature="(System.Type,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveImplicitConversionOperator" signature="(System.Type,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveExplictConversionOperator" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveExplicitConversionOperator" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveExplictConversionOperator" signature="(System.Type,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveExplicitConversionOperator" signature="(System.Type,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveExplictConversionOperator" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveExplicitConversionOperator" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveExplictConversionOperator" signature="(System.Type,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotHaveExplicitConversionOperator" signature="(System.Type,System.Type,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AssertThatSubjectIsClass" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.TypeSelector" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\TypeSelector.cs" line-rate="1" branch-rate="1" complexity="19">
          <methods>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ToArray" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="ThatDeriveFrom" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatDoNotDeriveFrom" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatImplement" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatDoNotImplement" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreDecoratedWith" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreDecoratedWithOrInherit" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreNotDecoratedWith" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreNotDecoratedWithOrInherit" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="ThatAreInNamespace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatAreNotInNamespace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatAreUnderNamespace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ThatAreNotUnderNamespace" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="System.Collections.IEnumerable.GetEnumerator" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Types.TypeSelectorAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Types\TypeSelectorAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Subject" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Subject" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWith" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWithOrInherit" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeDecoratedWithOrInherit" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWith" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWith" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWithOrInherit" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeDecoratedWithOrInherit" signature="(System.Linq.Expressions.Expression`1&lt;System.Func`2&lt;TAttribute,System.Boolean&gt;&gt;,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDescriptionsFor" signature="(System.Collections.Generic.IEnumerable`1&lt;System.Type&gt;)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetDescriptionFor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.Equivalency.AttributeData" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\Equivalency\AttributeData.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="NamespaceUri" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LocalName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Prefix" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="QualifiedName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.Equivalency.Failure" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\Equivalency\Failure.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FormatString" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatParams" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.Equivalency.Node" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\Equivalency\Node.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name="Parent" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateRoot" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(FluentAssertions.Xml.Equivalency.Node,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetXPath" signature="()" line-rate="1" branch-rate="1" complexity="5">
              <lines />
            </method>
            <method name="Push" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Pop" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name="AddChildNode" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="GetPath" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.Equivalency.XmlIterator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\Equivalency\XmlIterator.cs" line-rate="1" branch-rate="1" complexity="9">
          <methods>
            <method name="NodeType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="LocalName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NamespaceUri" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Value" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEmptyElement" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="IsEndOfDocument" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.XmlReader)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Read" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="MoveToEndElement" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
            <method name="GetAttributes" signature="()" line-rate="1" branch-rate="1" complexity="4">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.Equivalency.XmlReaderValidator" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\Equivalency\XmlReaderValidator.cs" line-rate="1" branch-rate="1" complexity="11">
          <methods>
            <method name=".ctor" signature="(System.Xml.XmlReader,System.Xml.XmlReader,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Validate" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Validate" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ValidateAttributes" signature="()" line-rate="1" branch-rate="1" complexity="6">
              <lines />
            </method>
            <method name="ValidateStartElement" signature="()" line-rate="1" branch-rate="1" complexity="3">
              <lines />
            </method>
            <method name="ValidateText" signature="()" line-rate="1" branch-rate="1" complexity="2">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.XAttributeAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\XAttributeAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.Linq.XAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Xml.Linq.XAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Xml.Linq.XAttribute,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Xml.Linq.XAttribute)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Xml.Linq.XAttribute,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.XDocumentAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\XDocumentAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.Linq.XDocument)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Xml.Linq.XDocument)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Xml.Linq.XDocument,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Xml.Linq.XDocument)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Xml.Linq.XDocument,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Xml.Linq.XDocument)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Xml.Linq.XDocument,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(System.Xml.Linq.XDocument)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(System.Xml.Linq.XDocument,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveRoot" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveRoot" signature="(System.Xml.Linq.XName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveRoot" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveRoot" signature="(System.Xml.Linq.XName,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.Xml.Linq.XName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.Xml.Linq.XName,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.XElementAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\XElementAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Be" signature="(System.Xml.Linq.XElement,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBe" signature="(System.Xml.Linq.XElement,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Xml.Linq.XElement,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(System.Xml.Linq.XElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(System.Xml.Linq.XElement,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveValue" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAttribute" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAttribute" signature="(System.Xml.Linq.XName,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAttribute" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAttribute" signature="(System.Xml.Linq.XName,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.Xml.Linq.XName)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.Xml.Linq.XName,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.XmlElementAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\XmlElementAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Xml.XmlElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveInnerText" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveInnerText" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAttribute" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAttribute" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAttributeWithNamespace" signature="(System.String,System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveAttributeWithNamespace" signature="(System.String,System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElement" signature="(System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElementWithNamespace" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="HaveElementWithNamespace" signature="(System.String,System.String,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.XmlNodeAssertions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\XmlNodeAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name=".ctor" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.XmlNodeAssertions`2" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\XmlNodeAssertionsofTSubjectTAssertions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Identifier" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(TSubject)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BeEquivalentTo" signature="(System.Xml.XmlNode,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="NotBeEquivalentTo" signature="(System.Xml.XmlNode,System.String,System.Object[])" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.Xml.XmlNodeFormatter" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\XmlNodeFormatter.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CanHandle" signature="(System.Object)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.Object,FluentAssertions.Formatting.FormattingContext,FluentAssertions.Formatting.FormatChild)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="FluentAssertions.XmlAssertionExtensions" filename="C:\projects\fluentassertions-vf06b\Src\FluentAssertions\Xml\XmlAssertionExtensions.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Should" signature="(System.Xml.XmlNode)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Should" signature="(System.Xml.XmlElement)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspChildControlTypeAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="TagName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TagName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ControlType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ControlType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspMvcActionAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="AnonymousProperty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AnonymousProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspMvcAreaAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="AnonymousProperty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AnonymousProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspMvcAreaMasterLocationFormatAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Format" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspMvcAreaPartialViewLocationFormatAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Format" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspMvcAreaViewLocationFormatAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Format" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspMvcControllerAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="AnonymousProperty" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="AnonymousProperty" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspMvcMasterLocationFormatAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Format" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspMvcPartialViewLocationFormatAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Format" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspMvcViewLocationFormatAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Format" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Format" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspRequiredAttributeAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Attribute" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Attribute" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AspTypePropertyAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CreateConstructorReferences" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CreateConstructorReferences" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.AssertionConditionAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="ConditionType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ConditionType" signature="(JetBrains.Annotations.AssertionConditionType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(JetBrains.Annotations.AssertionConditionType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.BaseTypeRequiredAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="BaseType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BaseType" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Type)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.CollectionAccessAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="CollectionAccessType" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="CollectionAccessType" signature="(JetBrains.Annotations.CollectionAccessType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(JetBrains.Annotations.CollectionAccessType)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.ContractAnnotationAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Contract" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Contract" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForceFullStates" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ForceFullStates" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.HtmlAttributeValueAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.HtmlElementAttributesAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.LocalizationRequiredAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Required" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Required" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.Boolean)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.MacroAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Expression" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Expression" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Editable" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Editable" signature="(System.Int32)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Target" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Target" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.MeansImplicitUseAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="UseKindFlags" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseKindFlags" signature="(JetBrains.Annotations.ImplicitUseKindFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFlags" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFlags" signature="(JetBrains.Annotations.ImplicitUseTargetFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(JetBrains.Annotations.ImplicitUseKindFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(JetBrains.Annotations.ImplicitUseTargetFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(JetBrains.Annotations.ImplicitUseKindFlags,JetBrains.Annotations.ImplicitUseTargetFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.MustUseReturnValueAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Justification" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Justification" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.NotifyPropertyChangedInvocatorAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="ParameterName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="ParameterName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.PathReferenceAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="BasePath" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="BasePath" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.PublicAPIAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="Comment" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Comment" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.RazorDirectiveAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Directive" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Directive" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.RazorImportNamespaceAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.RazorInjectionAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Type" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Type" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FieldName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FieldName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String,System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.StringFormatMethodAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="FormatParameterName" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="FormatParameterName" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.UsedImplicitlyAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="1">
          <methods>
            <method name="UseKindFlags" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="UseKindFlags" signature="(JetBrains.Annotations.ImplicitUseKindFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFlags" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="TargetFlags" signature="(JetBrains.Annotations.ImplicitUseTargetFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="()" line-rate="1" branch-rate="1" complexity="1">
              <lines />
            </method>
            <method name=".ctor" signature="(JetBrains.Annotations.ImplicitUseKindFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(JetBrains.Annotations.ImplicitUseTargetFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(JetBrains.Annotations.ImplicitUseKindFlags,JetBrains.Annotations.ImplicitUseTargetFlags)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
        <class name="JetBrains.Annotations.ValueProviderAttribute" filename="C:\projects\fluentassertions-vf06b\Src\JetBrainsAnnotations.cs" line-rate="1" branch-rate="1" complexity="NaN">
          <methods>
            <method name="Name" signature="()" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name="Name" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
            <method name=".ctor" signature="(System.String)" line-rate="1" branch-rate="1" complexity="NaN">
              <lines />
            </method>
          </methods>
          <lines />
        </class>
      </classes>
    </package>
  </packages>
</coverage>